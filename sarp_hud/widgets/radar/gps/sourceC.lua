local disallowedNodes = {
	{2490369, 2490625},
	{2425037, 2425039},
	{1507884, 1507862},
	{1507885, 1507884},
	{1507886, 1507885},
	{1507887, 1507886},
	{1507888, 1507887},
	{1507889, 1507888},
	{1507890, 1507889},
	{1507891, 1507890},
	{1507892, 1507891},
	{1507883, 1507892},
	{1507894, 1507883},
	{1507893, 1507894},
	{1507551, 1507893},
	{1507540, 1507551},
	{1507542, 1507540},
	{1507543, 1507542},
	{1507541, 1507543},
	{1507854, 1507541},
	{1507502, 1507854},
	{1507503, 1507502},
	{1507504, 1507503},
	{1507505, 1507504},
	{1507506, 1507505},
	{1507507, 1507506},
	{1507508, 1507507},
	{1507509, 1507508},
	{1507510, 1507509},
	{1507501, 1507510},
	{1507835, 1507501},
	{1507837, 1507835},
	{1507836, 1507837},
	{983512, 1507836},
	{983506, 983512},
	{983511, 983506},
	{983510, 983511},
	{983509, 983510},
	{983508, 983509},
	{983507, 983508},
	{983556, 983507},
	{983555, 983558},
	{983555, 983556},
	{983505, 983555},
	{983504, 983505},
	{983604, 983556},
	{983608, 983604},
	{983607, 983608},
	{983606, 983607},
	{983605, 983606},
	{983594, 983605},
	{983603, 983594},
	{983602, 983603},
	{983601, 983602},
	{983600, 983601},
	{983599, 983600},
	{983598, 983599},
	{983597, 983598},
	{983596, 983597},
	{983595, 983596},
	{983588, 983595},
	{983589, 983588},
	{983593, 983589},
	{983592, 983593},
	{983591, 983592},
	{983590, 983591},
	{983580, 983590},
	{983587, 983580},
	{983586, 983587},
	{983585, 983586},
	{983584, 983585},
	{983583, 983584},
	{983582, 983583},
	{983581, 983582},
	{918023, 983581},
	{918022, 918023},
	{918021, 983539},
	{918021, 918022},
	{917994, 918021},
	{917998, 917994},
	{917997, 917998},
	{917996, 917997},
	{917995, 917996},
	{918116, 917995},
	{918117, 918116},
	{918118, 918117},
	{918115, 918118},
	{918111, 918115},
	{918111, 1442452},
	{918111, 918112},
	{917987, 918111},
	{917993, 917987},
	{917992, 917993},
	{917991, 917992},
	{917990, 917991},
	{917989, 917990},
	{917988, 917989},
	{917986, 917988},
	{918006, 918113},
	{918006, 918007},
	{917953, 918006},
	{917960, 917953},
	{917959, 917960},
	{917958, 917959},
	{917957, 917958},
	{917956, 917957},
	{917955, 917956},
	{917954, 917955},
	{917637, 917954},
	{918129, 918027},
	{917962, 918129},
	{917963, 917962},
	{917964, 917963},
	{917965, 917964},
	{917966, 917965},
	{917967, 917966},
	{917968, 917967},
	{917961, 917968},
	{918005, 917961},
	{918005, 917999},
	{918008, 918005},
	{918009, 918008},
	{918007, 918009},
	{918011, 918006},
	{918012, 918011},
	{918013, 918012},
	{918014, 918013},
	{918015, 918014},
	{918016, 918015},
	{918017, 918016},
	{918018, 918017},
	{918010, 918018},
	{918019, 918010},
	{918020, 918019},
	{983578, 918020},
	{983579, 983578},
	{983577, 983579},
	{983567, 983577},
	{983576, 983567},
	{983575, 983576},
	{983574, 983575},
	{983573, 983574},
	{983572, 983573},
	{983571, 983572},
	{983570, 983571},
	{983569, 983570},
	{983568, 983569},
	{983557, 983568},
	{983566, 983557},
	{983565, 983566},
	{983564, 983565},
	{983563, 983564},
	{983562, 983563},
	{983561, 983562},
	{983560, 983561},
	{983559, 983560},
	{983558, 983559},
	{983290, 983288},
	{983311, 983290},
	{983313, 983311},
	{983312, 983313},
	{983301, 983312},
	{983310, 983301},
	{983309, 983310},
	{983308, 983309},
	{983307, 983308},
	{983306, 983307},
	{983305, 983306},
	{983304, 983305},
	{983303, 983304},
	{983302, 983303},
	{983162, 983302},
	{983627, 983162},
	{983626, 983627},
	{983625, 983626},
	{983626, 983628},
	{983624, 983623},
	{983624, 983625},
	{983247, 983624},
	{983249, 983247},
	{983248, 983249},
	{983235, 983248},
	{983235, 983614},
	{983252, 983235},
	{983259, 983252},
	{983258, 983259},
	{983257, 983258},
	{983256, 983257},
	{983255, 983256},
	{983254, 983255},
	{983253, 983254},
	{983163, 983635},
	{983163, 983253},
	{983266, 983163},
	{983267, 983266},
	{983268, 983267},
	{983269, 983268},
	{983270, 983269},
	{983271, 983270},
	{983272, 983271},
	{983273, 983272},
	{983265, 983273},
	{983615, 983265},
	{983619, 983615},
	{983618, 983619},
	{983617, 983618},
	{983616, 983617},
	{983171, 983616},
	{983172, 983171},
	{983170, 983172},
	{458752, 458884},
	{458752, 983170},
	{458806, 458807},
	{458807, 458806},
	{458816, 458815},
	{458816, 458817},
	{458817, 458816},
	{458883, 458881},
	{458882, 458883},
	{458878, 458880},
	{458878, 458882},
	{458756, 458878},
	{393248, 458756},
	{393249, 393248},
	{393247, 393249},
	{393243, 393505},
	{393243, 393247},
	{393245, 393243},
	{393246, 393245},
	{393244, 393246},
	{393241, 393244},
	{393242, 393241},
	{393279, 393242},
	{393280, 393279},
	{393281, 393280},
	{393282, 393281},
	{393283, 393282},
	{393284, 393283},
	{393285, 393284},
	{393286, 393285},
	{393278, 393286},
	{393298, 393278},
	{393299, 393298},
	{393300, 393299},
	{393301, 393300},
	{393302, 393301},
	{393297, 393302},
	{327747, 393297},
	{327748, 327747},
	{327752, 327748},
	{327751, 327752},
	{327750, 327751},
	{327749, 327750},
	{327867, 327749},
	{327868, 327867},
	{327869, 327868},
	{327866, 327869},
	{327861, 327866},
	{327737, 327861},
	{327734, 327737},
	{327736, 327734},
	{327735, 327736},
	{327740, 327735},
	{327739, 327740},
	{327738, 327739},
	{327733, 327769},
	{327733, 327738},
	{327848, 327733},
	{327849, 327848},
	{327847, 327849},
	{327811, 327847},
	{327817, 327811},
	{327816, 327817},
	{327815, 327816},
	{327814, 327815},
	{327813, 327814},
	{327818, 327813},
	{327812, 327823},
	{327812, 327818},
	{852338, 327812},
	{852339, 852338},
	{852340, 852339},
	{852337, 852340},
	{852076, 852337},
	{852084, 852076},
	{852083, 852084},
	{852082, 852083},
	{852081, 852082},
	{852080, 852081},
	{852079, 852080},
	{852078, 852079},
	{852077, 852078},
	{917777, 852077},
	{917767, 917777},
	{917776, 917767},
	{917775, 917776},
	{917774, 917775},
	{917773, 917774},
	{917772, 917773},
	{917771, 917772},
	{917770, 917771},
	{917769, 917770},
	{917768, 917769},
	{917594, 917768},
	{917593, 917594},
	{917592, 917593},
	{917591, 917592},
	{917590, 917591},
	{917595, 917590},
	{917555, 917595},
	{918103, 917555},
	{918104, 918103},
	{918105, 918104},
	{918106, 918105},
	{918107, 918106},
	{918108, 918107},
	{918109, 918108},
	{918110, 918109},
	{1442277, 918110},
	{1442276, 1442277},
	{1442279, 1442276},
	{1442280, 1442279},
	{1442281, 1442280},
	{1442282, 1442281},
	{1442278, 1442282},
	{1441801, 1442278},
	{1441801, 1441852},
	{1442298, 1441801},
	{1442299, 1442298},
	{1442297, 1442299},
	{1442289, 1442297},
	{1442296, 1442289},
	{1442295, 1442296},
	{1442294, 1442295},
	{1442293, 1442294},
	{1442292, 1442293},
	{1442291, 1442292},
	{1442290, 1442291},
	{1442287, 1442290},
	{1442675, 1442287},
	{1442676, 1442675},
	{1442677, 1442676},
	{1442678, 1442677},
	{1442679, 1442678},
	{1442680, 1442679},
	{1442681, 1442680},
	{1442682, 1442681},
	{1442683, 1442682},
	{1442674, 1442683},
	{1442685, 1442674},
	{1442686, 1442685},
	{1442687, 1442686},
	{1442688, 1442687},
	{1442689, 1442688},
	{1442690, 1442689},
	{1442691, 1442690},
	{1442692, 1442691},
	{1442693, 1442692},
	{1442684, 1442693},
	{1966135, 1442684},
	{1966135, 1442624},
	{1966178, 1966135},
	{1966179, 1966178},
	{1966180, 1966179},
	{1966181, 1966180},
	{1966177, 1966181},
	{1966252, 1966177},
	{1966253, 1966252},
	{1966251, 1966253},
	{1966250, 1966251},
	{1966167, 1966250},
	{1966169, 1966167},
	{1966168, 1966169},
	{1966148, 1966168},
	{1966149, 1966148},
	{1966150, 1966149},
	{1966151, 1966150},
	{1966152, 1966151},
	{1966153, 1966152},
	{1966154, 1966153},
	{1966155, 1966154},
	{1966156, 1966155},
	{1966147, 1966156},
	{1966158, 1966147},
	{1966159, 1966158},
	{1966160, 1966159},
	{1966161, 1966160},
	{1966162, 1966161},
	{1966163, 1966162},
	{1966164, 1966163},
	{1966165, 1966164},
	{1966166, 1966165},
	{1966157, 1966166},
	{2490529, 1966157},
	{2490530, 2490529},
	{2490531, 2490530},
	{2490532, 2490531},
	{2490533, 2490532},
	{2490535, 2490534},
	{2490536, 2490528},
	{2490528, 2490535},
	{2490534, 2490533},
	{2490538, 2490536},
	{2490539, 2490538},
	{2490540, 2490539},
	{2490541, 2490540},
	{2490537, 2490541},
	{2490542, 2490537},
	{2490542, 2490543},
	{2490542, 2490712},
	{2490514, 2490709},
	{2490513, 2490512},
	{2490513, 2490514},
	{2490516, 2490513},
	{2490515, 2490516},
	{2490517, 2490515},
	{2490519, 2490517},
	{2490520, 2490519},
	{2490521, 2490520},
	{2490522, 2490521},
	{2490523, 2490522},
	{2490524, 2490523},
	{2490525, 2490524},
	{2490526, 2490525},
	{2490527, 2490526},
	{2490518, 2490527},
	{1966081, 2490518},
	{1966082, 1966081},
	{1966083, 1966082},
	{1966084, 1966083},
	{1966085, 1966084},
	{1966086, 1966085},
	{1966087, 1966086},
	{1966088, 1966087},
	{1966089, 1966088},
	{1966080, 1966089},
	{1966138, 1966080},
	{1966139, 1966138},
	{1966140, 1966139},
	{1966141, 1966140},
	{1966142, 1966141},
	{1966143, 1966142},
	{1966144, 1966143},
	{1966145, 1966144},
	{1966146, 1966145},
	{1966137, 1966146},
	{1966171, 1966137},
	{1966172, 1966171},
	{1966173, 1966172},
	{1966174, 1966173},
	{1966170, 1966174},
	{1966254, 1966170},
	{1966254, 1966308},
	{1966175, 1966254},
	{1966176, 1966175},
	{1966136, 1966176},
	{1441807, 1966136},
	{1441808, 1441807},
	{1441809, 1441808},
	{1441810, 1441809},
	{1441811, 1441810},
	{1441812, 1441811},
	{1441813, 1441812},
	{1441806, 1441813},
	{1442284, 1441806},
	{1442285, 1442284},
	{1442286, 1442285},
	{1442283, 1442286},
	{1442288, 1441814},
	{1442288, 1442283},
	{1442309, 1442288},
	{1442313, 1442309},
	{1442312, 1442313},
	{1442311, 1442312},
	{1442310, 1442311},
	{1442300, 1442310},
	{1442308, 1442300},
	{1442307, 1442308},
	{1442306, 1442307},
	{1442305, 1442306},
	{1442304, 1442305},
	{1442303, 1442304},
	{1442302, 1442303},
	{1442301, 1442302},
	{1441800, 1442301},
	{1442270, 1441800},
	{1442275, 1442270},
	{1442274, 1442275},
	{1442273, 1442274},
	{1442272, 1442273},
	{1442271, 1442272},
	{1442269, 1442271},
	{918102, 1442269},
	{918101, 918102},
	{918100, 918101},
	{918099, 918100},
	{918098, 918099},
	{918097, 918098},
	{918096, 918097},
	{918095, 918096},
	{918094, 918095},
	{917554, 917557},
	{917554, 918094},
	{917587, 917554},
	{917588, 917587},
	{917589, 917588},
	{917586, 917589},
	{917779, 917586},
	{917780, 917779},
	{917781, 917780},
	{917782, 917781},
	{917783, 917782},
	{917784, 917783},
	{917785, 917784},
	{917786, 917785},
	{917787, 917786},
	{917778, 917787},
	{917788, 917778},
	{852131, 917788},
	{852132, 852131},
	{852133, 852132},
	{852134, 852133},
	{852135, 852134},
	{852136, 852135},
	{852137, 852136},
	{852138, 852137},
	{852130, 852138},
	{852323, 852130},
	{852142, 852323},
	{852336, 852142},
	{327846, 852336},
	{327845, 327846},
	{327844, 327845},
	{327843, 327844},
	{327842, 327843},
	{327841, 327842},
	{327690, 327841},
	{327690, 327710},
	{327870, 327690},
	{327732, 327870},
	{327745, 327732},
	{327746, 327745},
	{327744, 327746},
	{327742, 327744},
	{327743, 327742},
	{327741, 327743},
	{327871, 327741},
	{327873, 327871},
	{327872, 327873},
	{327854, 327763},
	{327854, 327872},
	{327855, 327854},
	{327857, 327855},
	{327856, 327857},
	{327755, 327856},
	{327756, 327755},
	{327757, 327756},
	{327758, 327757},
	{327754, 327758},
	{327753, 327754},
	{393303, 327753},
	{393309, 393303},
	{393308, 393309},
	{393307, 393308},
	{393306, 393307},
	{393305, 393306},
	{393304, 393305},
	{393296, 393304},
	{393295, 393296},
	{393294, 393295},
	{393293, 393294},
	{393292, 393293},
	{393291, 393292},
	{393290, 393291},
	{393289, 393290},
	{393288, 393289},
	{393287, 393288},
	{393477, 393287},
	{393478, 393477},
	{393479, 393478},
	{393480, 393479},
	{393476, 393480},
	{393240, 393476},
	{393251, 393240},
	{393250, 393251},
	{393252, 393250},
	{393253, 393252},
	{393254, 393253},
	{393255, 393254},
	{393503, 393504},
	{393503, 393255},
	{393506, 393503},
	{393507, 393506},
	{393508, 393507},
	{393509, 393508},
	{393510, 393509},
	{393511, 393510},
	{393512, 393511},
	{458876, 393512},
	{458877, 458876},
	{458875, 458877},
	{458754, 458879},
	{458754, 458875},
	{458755, 458754},
	{458753, 458755},
	{983173, 458753},
	{983175, 983173},
	{983174, 983175},
	{983621, 983174},
	{983622, 983621},
	{983620, 983622},
	{983274, 983620},
	{983283, 983274},
	{983282, 983283},
	{983281, 983282},
	{983280, 983281},
	{983279, 983280},
	{983278, 983279},
	{983277, 983278},
	{983276, 983277},
	{983275, 983276},
	{983260, 983275},
	{983262, 983260},
	{983263, 983262},
	{983264, 983263},
	{983261, 983264},
	{983236, 983261},
	{983251, 983236},
	{983250, 983251},
	{983246, 983614},
	{983246, 983250},
	{983234, 983246},
	{983245, 983234},
	{983244, 983245},
	{983164, 983244},
	{983292, 983164},
	{983293, 983292},
	{983294, 983293},
	{983295, 983294},
	{983296, 983295},
	{983297, 983296},
	{983298, 983297},
	{983299, 983298},
	{983300, 983299},
	{983291, 983300},
	{983639, 983291},
	{983638, 983639},
	{983637, 983638},
	{983317, 983637},
	{983316, 983317},
	{983315, 983316},
	{983314, 983315},
	{983318, 983314},
	{983322, 983318},
	{983321, 983322},
	{983320, 983321},
	{983319, 983320},
	{1507831, 983319},
	{1507830, 1507831},
	{1507829, 1507830},
	{1507828, 1507829},
	{1507827, 1507828},
	{1507817, 1507827},
	{1507826, 1507817},
	{1507825, 1507826},
	{1507824, 1507825},
	{1507823, 1507824},
	{1507822, 1507823},
	{1507821, 1507822},
	{1507820, 1507821},
	{1507819, 1507820},
	{1507818, 1507819},
	{1507955, 1507818},
	{1507956, 1507955},
	{1507957, 1507956},
	{1507954, 1507957},
	{1507951, 1507954},
	{1507951, 1507952},
	{1507811, 1507951},
	{1507816, 1507811},
	{1507815, 1507816},
	{1507814, 1507815},
	{1507813, 1507814},
	{1507812, 1507813},
	{1507801, 1507812},
	{1507810, 1507801},
	{1507809, 1507810},
	{1507808, 1507809},
	{1507807, 1507808},
	{1507806, 1507807},
	{1507805, 1507806},
	{1507804, 1507805},
	{1507803, 1507804},
	{1507802, 1507803},
	{1507833, 1507802},
	{1507834, 1507833},
	{1507832, 1507834},
	{2031756, 1507832},
	{2031777, 2031756},
	{2031776, 2031777},
	{2031775, 2031776},
	{2031804, 2031775},
	{2031816, 2031804},
	{2031817, 2031816},
	{2031818, 2031817},
	{2031819, 2031818},
	{2031820, 2031819},
	{2031821, 2031820},
	{2031822, 2031821},
	{2031823, 2031822},
	{2031824, 2031823},
	{2031815, 2031824},
	{2031826, 2031815},
	{2031827, 2031826},
	{2031828, 2031827},
	{2031829, 2031828},
	{2031830, 2031829},
	{2031831, 2031830},
	{2031832, 2031831},
	{2031833, 2031832},
	{2031825, 2031833},
	{2031855, 2031825},
	{2031855, 2031872},
	{2031857, 2031855},
	{2031858, 2031857},
	{2031859, 2031858},
	{2031856, 2031859},
	{2031806, 2031804},
	{2031807, 2031806},
	{2031808, 2031807},
	{2031809, 2031808},
	{2031810, 2031809},
	{2031811, 2031810},
	{2031812, 2031811},
	{2031813, 2031812},
	{2031814, 2031813},
	{2031805, 2031814},
	{2031779, 2031805},
	{2031780, 2031779},
	{2031781, 2031780},
	{2031782, 2031781},
	{2031783, 2031782},
	{2031784, 2031783},
	{2031785, 2031784},
	{2031786, 2031785},
	{2031787, 2031786},
	{2031778, 2031787},
	{2031648, 2031778},
	{2031647, 2031648},
	{2031649, 2031647},
	{2031639, 2031649},
	{2031640, 2031639},
	{2555925, 2031640},
	{2555926, 2555925},
	{2555923, 2555926},
	{2555922, 2555923},
	{2555924, 2555922},
	{2556136, 2555924},
	{2556136, 2556177},
	{2555928, 2556136},
	{2555929, 2555928},
	{2555930, 2555929},
	{2555931, 2555930},
	{2555932, 2555931},
	{2555933, 2555932},
	{2555934, 2555933},
	{2555935, 2555934},
	{2555936, 2555935},
	{2555927, 2555936},
	{2555938, 2555927},
	{2555939, 2555938},
	{2555940, 2555939},
	{2555941, 2555940},
	{2555942, 2555941},
	{2555943, 2555942},
	{2555944, 2555943},
	{2555945, 2555944},
	{2555946, 2555945},
	{2555937, 2555946},
	{2556059, 2555937},
	{2556059, 2555949},
	{2555947, 2556059},
	{2555988, 2555947},
	{2555992, 2555988},
	{2555991, 2555992},
	{2555990, 2555991},
	{2555989, 2555990},
	{2555978, 2555989},
	{2555987, 2555978},
	{2555986, 2555987},
	{2555985, 2555986},
	{2555984, 2555985},
	{2555983, 2555984},
	{2555982, 2555983},
	{2555981, 2555982},
	{2555980, 2555981},
	{2555979, 2555980},
	{2555966, 2555979},
	{2555975, 2555966},
	{2555974, 2555975},
	{2555973, 2555974},
	{2555972, 2555973},
	{2555971, 2555972},
	{2555970, 2555971},
	{2555969, 2555970},
	{2555968, 2555969},
	{2555967, 2555968},
	{2555994, 2556016},
	{2490396, 2555947},
	{2490397, 2490396},
	{2490398, 2490397},
	{2490399, 2490398},
	{2490400, 2490399},
	{2490401, 2490400},
	{2490402, 2490401},
	{2490403, 2490402},
	{2490404, 2490403},
	{2490395, 2490404},
	{2490923, 2490395},
	{2490923, 2490933},
	{2490406, 2490923},
	{2490407, 2490406},
	{2490923, 2490924},
	{2490405, 2490407},
	{2490408, 2490405},
	{2490420, 2490408},
	{2490421, 2490420},
	{2490422, 2490421},
	{2490423, 2490422},
	{2490424, 2490423},
	{2490425, 2490424},
	{2490426, 2490425},
	{2490427, 2490426},
	{2490428, 2490427},
	{2490419, 2490428},
	{2490430, 2490419},
	{2490431, 2490430},
	{2490432, 2490431},
	{2490433, 2490432},
	{2490434, 2490433},
	{2490435, 2490434},
	{2490436, 2490435},
	{2490437, 2490436},
	{2490438, 2490437},
	{2490429, 2490438},
	{2490512, 2490429},
	{2490440, 2490517},
	{2490441, 2490440},
	{2490442, 2490441},
	{2490443, 2490442},
	{2490444, 2490443},
	{2490445, 2490444},
	{2490446, 2490445},
	{2490447, 2490446},
	{2490448, 2490447},
	{2490439, 2490448},
	{2490450, 2490439},
	{2490451, 2490450},
	{2490452, 2490451},
	{2490453, 2490452},
	{2490454, 2490453},
	{2490449, 2490454},
	{2490657, 2490449},
	{2490546, 2490657},
	{2490456, 2490546},
	{2490457, 2490456},
	{2490458, 2490457},
	{2490455, 2490458},
	{2490634, 2490455},
	{2490634, 2490460},
	{2490545, 2490536},
	{2490459, 2490545},
	{2490467, 2490459},
	{2490466, 2490467},
	{2490465, 2490466},
	{2490464, 2490465},
	{2490463, 2490464},
	{2490462, 2490463},
	{2490461, 2490462},
	{2490460, 2490461},
	{2490919, 2490634},
	{2490920, 2490919},
	{2490921, 2490920},
	{2490922, 2490921},
	{2490918, 2490922},
	{2490913, 2490918},
	{2490915, 2490913},
	{2490916, 2490915},
	{2490917, 2490916},
	{2490914, 2490917},
	{2490900, 2490914},
	{2490899, 2490900},
	{2490898, 2490899},
	{2490898, 2490925},
	{2490898, 2490901},
	{2490472, 2490898},
	{2490471, 2490472},
	{2490470, 2490471},
	{2490469, 2490470},
	{2490468, 2490469},
	{2490474, 2490468},
	{2490473, 2490474},
	{2490475, 2490473},
	{2556017, 2490475},
	{2556018, 2556017},
	{2556019, 2556018},
	{2556020, 2556019},
	{2556021, 2556020},
	{2556022, 2556021},
	{2556023, 2556022},
	{2556024, 2556023},
	{2556016, 2556024},
	{2556026, 2555994},
	{2556027, 2556026},
	{2556028, 2556027},
	{2556029, 2556028},
	{2556030, 2556029},
	{2556031, 2556030},
	{2556032, 2556031},
	{2556033, 2556032},
	{2556034, 2556033},
	{2556025, 2556034},
	{2556036, 2556025},
	{2556037, 2556036},
	{2556038, 2556037},
	{2556035, 2556038},
	{2556039, 2556035},
	{2556039, 2556040},
	{2556041, 2490475},
	{2556042, 2556041},
	{2556043, 2556042},
	{2556044, 2556043},
	{2556045, 2556044},
	{2556040, 2556045},
	{2556047, 2556039},
	{2556048, 2556047},
	{2556049, 2556048},
	{2556050, 2556049},
	{2556051, 2556050},
	{2556052, 2556051},
	{2556053, 2556052},
	{2556054, 2556053},
	{2556055, 2556054},
	{2556046, 2556055},
	{2556057, 2556046},
	{2556058, 2556057},
	{2556056, 2556058},
	{2556137, 2556056},
	{2556157, 2556137},
	{2556158, 2556157},
	{2556159, 2556158},
	{2556160, 2556159},
	{2556161, 2556160},
	{2556162, 2556161},
	{2556163, 2556162},
	{2556164, 2556163},
	{2556156, 2556164},
	{2556165, 2556156},
	{2556166, 2556165},
	{2556195, 2556200},
	{2556195, 2556166},
	{2556196, 2556195},
	{2556198, 2556196},
	{2556197, 2556198},
	{2556300, 2556305},
	{2556192, 2556197},
	{2555993, 2555967},
	{2556194, 2556192},
	{2556193, 2556194},
	{2556191, 2556193},
	{2556185, 2556191},
	{2556190, 2556185},
	{2556189, 2556190},
	{2556188, 2556189},
	{2556187, 2556188},
	{2556186, 2556187},
	{2556184, 2556178},
	{2556184, 2556186},
	{2556182, 2556184},
	{2556183, 2556182},
	{2556262, 2556183},
	{2556264, 2556262},
	{2556263, 2556264},
	{2031710, 2556263},
	{2556266, 2031710},
	{2556267, 2556266},
	{2556265, 2556267},
	{2556206, 2556265},
	{2556208, 2556206},
	{2556207, 2556208},
	{2556205, 2556207},
	{2556199, 2556205},
	{2556204, 2556199},
	{2556203, 2556204},
	{2556202, 2556203},
	{2556201, 2556202},
	{2556200, 2556201},
	{2556168, 2556205},
	{2556169, 2556168},
	{2556170, 2556169},
	{2556171, 2556170},
	{2556172, 2556171},
	{2556173, 2556172},
	{2556174, 2556173},
	{2556175, 2556174},
	{2556176, 2556175},
	{2556167, 2556176},
	{2556177, 2556167},
	{2031653, 2031649},
	{2031654, 2031653},
	{2031655, 2031654},
	{2031656, 2031655},
	{2031657, 2031656},
	{2556148, 2031657},
	{2556147, 2556148},
	{2556179, 2556147},
	{2556180, 2556179},
	{2556181, 2556180},
	{2556178, 2556181},
	{2556152, 2556191},
	{2556155, 2556152},
	{2556154, 2556155},
	{2556153, 2556154},
	{2556149, 2556153},
	{2556151, 2556149},
	{2556150, 2556151},
	{2031663, 2556150},
	{2031662, 2031663},
	{2031661, 2031662},
	{2031660, 2031661},
	{2031659, 2031660},
	{2031658, 2031659},
	{2031650, 2031651},
	{2556139, 2556137},
	{2556140, 2556139},
	{2556141, 2556140},
	{2556142, 2556141},
	{2556138, 2556142},
	{2556143, 2556138},
	{2556146, 2556143},
	{2556145, 2556146},
	{2556144, 2556145},
	{2031652, 2556144},
	{2031651, 2031652},
	{2031646, 2031650},
	{2031646, 2031658},
	{2031645, 2031646},
	{2031644, 2031645},
	{2031643, 2031644},
	{2031642, 2031643},
	{2031641, 2031642},
	{2031854, 2031641},
	{2031853, 2031854},
	{2031852, 2031853},
	{2031790, 2031852},
	{2031791, 2031790},
	{2031792, 2031791},
	{2031793, 2031792},
	{2031843, 2031852},
	{2031851, 2031843},
	{2031850, 2031851},
	{2031849, 2031850},
	{2031848, 2031849},
	{2031847, 2031848},
	{2031846, 2031847},
	{2031845, 2031846},
	{2031844, 2031845},
	{2031834, 2031844},
	{2031836, 2031834},
	{2031842, 2031836},
	{2031841, 2031842},
	{2031840, 2031841},
	{2031839, 2031840},
	{2031838, 2031839},
	{2031837, 2031838},
	{2031835, 2031837},
	{2031883, 2031881},
	{2031883, 2031835},
	{2031885, 2031883},
	{2031887, 2031885},
	{2031886, 2031887},
	{2031884, 2031886},
	{2031889, 2031884},
	{2031890, 2031889},
	{2031891, 2031890},
	{2031892, 2031891},
	{2031888, 2031892},
	{2031871, 2031888},
	{2031880, 2031871},
	{2031879, 2031880},
	{2031878, 2031879},
	{2031877, 2031878},
	{2031876, 2031877},
	{2031875, 2031876},
	{2031874, 2031875},
	{2031873, 2031874},
	{2031872, 2031873},
	{2031860, 2031856},
	{2031862, 2031860},
	{2031863, 2031862},
	{2031864, 2031863},
	{2031865, 2031864},
	{2031866, 2031865},
	{2031867, 2031866},
	{2031868, 2031867},
	{2031869, 2031868},
	{2031870, 2031869},
	{2031861, 2031870},
	{2031882, 2031861},
	{2031881, 2031882},
	{2031794, 2031793},
	{2031795, 2031794},
	{2031796, 2031795},
	{2031789, 2031796},
	{2031788, 2031789},
	{2031797, 2031788},
	{2031798, 2031797},
	{2031799, 2031798},
	{2031800, 2031799},
	{2031801, 2031800},
	{2031802, 2031801},
	{2031803, 2031802},
	{1507948, 2031803},
	{1507947, 1507948},
	{1507797, 1507947},
	{1507800, 1507797},
	{1507799, 1507800},
	{1507798, 1507799},
	{1507787, 1507798},
	{1507796, 1507787},
	{1507795, 1507796},
	{1507794, 1507795},
	{1507793, 1507794},
	{1507792, 1507793},
	{1507791, 1507792},
	{1507790, 1507791},
	{1507789, 1507790},
	{1507788, 1507789},
	{1507770, 1507788},
	{1507770, 1507953},
	{1507772, 1507770},
	{1507773, 1507772},
	{1507774, 1507773},
	{1507775, 1507774},
	{1507776, 1507775},
	{1507777, 1507776},
	{1507778, 1507777},
	{1507779, 1507778},
	{1507780, 1507779},
	{1507771, 1507780},
	{1507781, 1507771},
	{1507782, 1507781},
	{1507783, 1507782},
	{1507784, 1507783},
	{1507785, 1507784},
	{1507786, 1507785},
	{983285, 1507786},
	{983286, 983285},
	{983287, 983286},
	{983284, 983287},
	{983289, 983284},
	{983288, 983289},
	{983492, 983504},
	{983225, 983228},
	{983226, 983223},
	{983356, 983524},
	{983531, 983356},
	{983532, 983531},
	{983533, 983532},
	{983534, 983533},
	{983535, 983534},
	{983536, 983535},
	{983537, 983536},
	{983538, 983537},
	{983530, 983538},
	{983539, 983530},
	{983517, 983588},
	{983518, 983517},
	{983519, 983518},
	{983520, 983519},
	{983521, 983520},
	{983522, 983521},
	{983523, 983522},
	{983516, 983523},
	{983515, 983516},
	{983525, 983515},
	{983526, 983525},
	{983527, 983526},
	{983528, 983527},
	{983529, 983528},
	{983524, 983529},
	{1442239, 917986},
	{1442247, 1442239},
	{1442246, 1442247},
	{1442245, 1442246},
	{1442244, 1442245},
	{1442243, 1442244},
	{1442242, 1442243},
	{1442241, 1442242},
	{1442240, 1442241},
	{1442238, 1442240},
	{917567, 917986},
	{917566, 917567},
	{1441850, 917566},
	{1441849, 1441850},
	{1441848, 1441849},
	{1441847, 1441848},
	{1442214, 1441847},
	{1442215, 1442214},
	{1442222, 1442215},
	{1442221, 1442222},
	{1442220, 1442221},
	{1442219, 1442220},
	{1442218, 1442219},
	{1442217, 1442218},
	{1442216, 1442217},
	{1441851, 1442216},
	{1441853, 1441851},
	{1441852, 1441853},
	{1442211, 1442214},
	{1442213, 1442211},
	{1442212, 1442213},
	{1441846, 1442212},
	{917565, 1441846},
	{917564, 917565},
	{917563, 917564},
	{917562, 917563},
	{917561, 917562},
	{917560, 917561},
	{917559, 917560},
	{917558, 917559},
	{917557, 917558},
	{917578, 917555},
	{917585, 917578},
	{917584, 917585},
	{917583, 917584},
	{917582, 917583},
	{917581, 917582},
	{917580, 917581},
	{917579, 917580},
	{917556, 917579},
	{917556, 917572},
	{917569, 917556},
	{917570, 917569},
	{917571, 917570},
	{917568, 917571},
	{918000, 917568},
	{918001, 918000},
	{918002, 918001},
	{918003, 918002},
	{918004, 918003},
	{917999, 918004},
	{1441802, 1441800},
	{1441803, 1441802},
	{1441854, 1441803},
	{1441857, 1441854},
	{1441856, 1441857},
	{1441855, 1441856},
	{917577, 1441855},
	{917576, 917577},
	{917575, 917576},
	{917574, 917575},
	{917573, 917574},
	{917572, 917573},
	{1442603, 1441804},
	{1442612, 1442603},
	{1442612, 1442604},
	{1442611, 1442612},
	{1442610, 1442611},
	{1442609, 1442610},
	{1442608, 1442609},
	{1442607, 1442608},
	{1442606, 1442607},
	{1442605, 1442606},
	{1442602, 1442605},
	{1442615, 1442602},
	{1442616, 1442615},
	{1442617, 1442616},
	{1442618, 1442617},
	{1442619, 1442618},
	{1442620, 1442619},
	{1442621, 1442620},
	{1442622, 1442621},
	{1442614, 1442622},
	{1442613, 1442647},
	{1442613, 1442614},
	{1442623, 1442613},
	{1442628, 1442623},
	{1442627, 1442628},
	{1442626, 1442627},
	{1442625, 1442626},
	{1442624, 1442625},
	{1442671, 1442602},
	{1442673, 1442671},
	{1442672, 1442673},
	{1442664, 1442672},
	{1442670, 1442664},
	{1442669, 1442670},
	{1442668, 1442669},
	{1442667, 1442668},
	{1442666, 1442667},
	{1442665, 1442666},
	{1442655, 1442665},
	{1442663, 1442655},
	{1442662, 1442663},
	{1442661, 1442662},
	{1442660, 1442661},
	{1442659, 1442660},
	{1442658, 1442659},
	{1442657, 1442658},
	{1442656, 1442657},
	{1442649, 1442656},
	{1442654, 1442649},
	{1442653, 1442654},
	{1442652, 1442653},
	{1442651, 1442652},
	{1442650, 1442651},
	{1441805, 1442650},
	{1441805, 1442475},
	{1441815, 1441805},
	{1441816, 1441815},
	{1441817, 1441816},
	{1441814, 1441817},
	{1441820, 1442287},
	{1441819, 1441820},
	{1441818, 1441819},
	{1442528, 1441818},
	{1442529, 1442528},
	{1442530, 1442529},
	{1442531, 1442530},
	{1442532, 1442531},
	{1442533, 1442532},
	{1442527, 1442533},
	{1442534, 1442527},
	{1442536, 1442534},
	{1442535, 1442536},
	{1442590, 1442595},
	{1442526, 1442535},
	{1442526, 1442590},
	{1442597, 1442526},
	{1442598, 1442597},
	{1442599, 1442598},
	{1442600, 1442599},
	{1442601, 1442600},
	{1442596, 1442601},
	{1442512, 1966136},
	{1442513, 1442512},
	{1442514, 1442513},
	{1442511, 1442514},
	{1442510, 1442511},
	{1442565, 1442510},
	{1442524, 1442510},
	{1442566, 1442565},
	{1442567, 1442566},
	{1442568, 1442567},
	{1442569, 1442568},
	{1442570, 1442569},
	{1442571, 1442570},
	{1442564, 1442571},
	{1442573, 1442564},
	{1442574, 1442573},
	{1442575, 1442574},
	{1442576, 1442575},
	{1442577, 1442576},
	{1442578, 1442577},
	{1442579, 1442578},
	{1442580, 1442579},
	{1442572, 1442580},
	{1442582, 1442572},
	{1442583, 1442582},
	{1442584, 1442583},
	{1442585, 1442584},
	{1442586, 1442585},
	{1442587, 1442586},
	{1442588, 1442587},
	{1442589, 1442588},
	{1442581, 1442589},
	{1442591, 1442581},
	{1442592, 1442591},
	{1376729, 1376731},
	{1376721, 1376730},
	{1376724, 1376721},
	{1376723, 1376724},
	{1376722, 1376723},
	{1376673, 1376936},
	{1376673, 1376722},
	{1376795, 1376673},
	{1376796, 1376795},
	{1376797, 1376796},
	{1376798, 1376797},
	{1376799, 1376798},
	{1376800, 1376799},
	{1376801, 1376800},
	{1376802, 1376801},
	{1376794, 1376802},
	{1376786, 1376794},
	{1376787, 1376786},
	{1376788, 1376787},
	{1376793, 1376788},
	{1376792, 1376793},
	{1376791, 1376792},
	{1376790, 1376791},
	{1376789, 1376790},
	{1442263, 1376789},
	{1442264, 1442263},
	{1442265, 1442264},
	{1442262, 1442265},
	{1442237, 1442262},
	{1442266, 1442237},
	{1442268, 1442266},
	{1442267, 1442268},
	{1376893, 1442267},
	{1376892, 1376893},
	{1376891, 1376892},
	{1376890, 1376891},
	{1376781, 1376890},
	{1376785, 1376781},
	{1376784, 1376785},
	{1376783, 1376784},
	{1376782, 1376783},
	{1376771, 1376782},
	{1376780, 1376771},
	{1376779, 1376780},
	{1376778, 1376779},
	{1376777, 1376778},
	{1376776, 1376777},
	{1376775, 1376776},
	{1376774, 1376775},
	{1376773, 1376774},
	{1376772, 1376773},
	{1376672, 1376772},
	{1376672, 1376673},
	{1376674, 1376935},
	{1376935, 1376672},
	{1376674, 1376850},
	{1376675, 1376674},
	{1376726, 1376675},
	{1376727, 1376726},
	{1376728, 1376727},
	{1376725, 1376728},
	{1376731, 1376725},
	{1376953, 1376731},
	{1376954, 1376953},
	{1376955, 1376954},
	{1376956, 1376955},
	{1376957, 1376956},
	{1376958, 1376957},
	{1376952, 1376958},
	{1442464, 1376952},
	{1442466, 1442464},
	{1442467, 1442466},
	{1442468, 1442467},
	{1442469, 1442468},
	{1442470, 1442469},
	{1442471, 1442470},
	{1442472, 1442471},
	{1442473, 1442472},
	{1442474, 1442473},
	{1442465, 1442474},
	{1442476, 1442465},
	{1442477, 1442476},
	{1442478, 1442477},
	{1442479, 1442478},
	{1442475, 1442479},
	{1442630, 1442464},
	{1442631, 1442630},
	{1442632, 1442631},
	{1442633, 1442632},
	{1442634, 1442633},
	{1442635, 1442634},
	{1442636, 1442635},
	{1442637, 1442636},
	{1442638, 1442637},
	{1442629, 1442638},
	{1442640, 1442629},
	{1442641, 1442640},
	{1442642, 1442641},
	{1442643, 1442642},
	{1442644, 1442643},
	{1442645, 1442644},
	{1442646, 1442645},
	{1442639, 1442646},
	{1442648, 1442639},
	{1442647, 1442648},
	{1442525, 1442524},
	{1442515, 1442525},
	{1442523, 1442515},
	{1442522, 1442523},
	{1442521, 1442522},
	{1442520, 1442521},
	{1442519, 1442520},
	{1442518, 1442519},
	{1442517, 1442518},
	{1442516, 1442517},
	{1442509, 1442561},
	{1442509, 1442516},
	{1442506, 1442509},
	{1442508, 1442506},
	{1442507, 1442508},
	{1376969, 1442507},
	{1376968, 1376969},
	{1376967, 1376968},
	{1376966, 1376967},
	{1376965, 1376966},
	{1376964, 1376965},
	{1376730, 1376729},
	{1376730, 1376964},
	{1442538, 1441818},
	{1442539, 1442538},
	{1442540, 1442539},
	{1442541, 1442540},
	{1442542, 1442541},
	{1442543, 1442542},
	{1442544, 1442543},
	{1442545, 1442544},
	{1442537, 1442545},
	{1442547, 1442537},
	{1442548, 1442547},
	{1442549, 1442548},
	{1442550, 1442549},
	{1442551, 1442550},
	{1442552, 1442551},
	{1442546, 1442552},
	{1442554, 1442546},
	{1442555, 1442554},
	{1442556, 1442555},
	{1442557, 1442556},
	{1442558, 1442557},
	{1442559, 1442558},
	{1442560, 1442559},
	{1442553, 1442560},
	{1442562, 1442553},
	{1442563, 1442562},
	{1442561, 1442563},
	{1376677, 1376674},
	{1376678, 1376677},
	{1376679, 1376678},
	{1376680, 1376679},
	{1376681, 1376680},
	{1376682, 1376681},
	{1376676, 1376682},
	{1376684, 1376702},
	{1376694, 1376683},
	{1376695, 1376694},
	{1376696, 1376695},
	{1376697, 1376696},
	{1376698, 1376697},
	{1376699, 1376698},
	{1376700, 1376699},
	{1376693, 1376700},
	{1376711, 1376693},
	{1376717, 1376711},
	{1376718, 1376717},
	{1376719, 1376718},
	{1376720, 1376719},
	{1376925, 1376720},
	{1376928, 1376925},
	{1376930, 1376928},
	{1376929, 1376930},
	{1376441, 1376929},
	{1376547, 1376441},
	{1376553, 1376547},
	{1376552, 1376553},
	{1376551, 1376552},
	{1376550, 1376551},
	{1376549, 1376550},
	{1376548, 1376549},
	{1376518, 1376548},
	{1376521, 1376565},
	{1376519, 1376521},
	{1376520, 1376518},
	{1376520, 1376538},
	{1376914, 1376915},
	{1376521, 1376914},
	{1376519, 1376575},
	{1376913, 1376519},
	{1376518, 1376913},
	{1376522, 1376518},
	{1376526, 1376522},
	{1376525, 1376526},
	{1376524, 1376525},
	{1376523, 1376524},
	{1376517, 1376523},
	{1376517, 1376912},
	{1376528, 1376517},
	{1376530, 1376528},
	{1376529, 1376530},
	{1376527, 1376909},
	{1376527, 1376529},
	{1376804, 1376527},
	{1376808, 1376804},
	{1376807, 1376808},
	{1376806, 1376807},
	{1376805, 1376806},
	{1376803, 1376805},
	{1376824, 1376803},
	{1376825, 1376824},
	{1376823, 1376825},
	{1376820, 1376823},
	{1376822, 1376820},
	{1376821, 1376822},
	{1376818, 1376821},
	{1376818, 1376907},
	{1376834, 1376818},
	{1376835, 1376834},
	{1376836, 1376835},
	{1376837, 1376836},
	{1376833, 1376837},
	{1376816, 1376379},
	{1376816, 1376833},
	{1376816, 1376908},
	{1376504, 1376816},
	{1376505, 1376504},
	{1311092, 1376505},
	{1311091, 1311092},
	{1311090, 1311091},
	{1311089, 1311090},
	{1311088, 1311089},
	{1311087, 1311088},
	{1311086, 1311087},
	{1311054, 1311086},
	{1311054, 1311055},
	{1311515, 1311054},
	{1311052, 1311045},
	{1311056, 1311052},
	{1311062, 1311056},
	{1311061, 1311062},
	{1311060, 1311061},
	{1311059, 1311060},
	{1311058, 1311059},
	{1311057, 1311058},
	{1310954, 1311057},
	{1310954, 1311517},
	{1310956, 1310954},
	{1310957, 1310956},
	{1310958, 1310957},
	{1310959, 1310958},
	{1310960, 1310959},
	{1310961, 1310960},
	{1310962, 1310961},
	{1310963, 1310962},
	{1310964, 1310963},
	{1310955, 1310964},
	{1310906, 1310955},
	{1310906, 1311518},
	{1310908, 1310906},
	{1310911, 1310908},
	{1310910, 1310911},
	{1310909, 1310910},
	{1311541, 1310909},
	{786905, 1311541},
	{786904, 786905},
	{786896, 786904},
	{786896, 786881},
	{786897, 786896},
	{786903, 786897},
	{786902, 786903},
	{786901, 786902},
	{786900, 786901},
	{786899, 786900},
	{786898, 786899},
	{786895, 786894},
	{786895, 786898},
	{786595, 786895},
	{786599, 786595},
	{786598, 786599},
	{786597, 786598},
	{786596, 786597},
	{786539, 786596},
	{786539, 786826},
	{786541, 786539},
	{786544, 786541},
	{786543, 786544},
	{786542, 786543},
	{786530, 786542},
	{786546, 786531},
	{786547, 786546},
	{786548, 786547},
	{786545, 786548},
	{786540, 786826},
	{786540, 786545},
	{786601, 786540},
	{786602, 786601},
	{786603, 786602},
	{786604, 786603},
	{786605, 786604},
	{786606, 786605},
	{786607, 786606},
	{786608, 786607},
	{786609, 786608},
	{786600, 786609},
	{1310913, 786600},
	{1310914, 1310913},
	{1310915, 1310914},
	{1310912, 1310915},
	{1310907, 1311518},
	{1310907, 1310912},
	{1310970, 1310907},
	{1310971, 1310970},
	{1310972, 1310971},
	{1310973, 1310972},
	{1310974, 1310973},
	{1310975, 1310974},
	{1310976, 1310975},
	{1310969, 1310976},
	{1310965, 1310969},
	{1310967, 1310965},
	{1310968, 1310967},
	{1310966, 1311517},
	{1310966, 1310968},
	{1311064, 1310966},
	{1311065, 1311064},
	{1311066, 1311065},
	{1311067, 1311066},
	{1311068, 1311067},
	{1311069, 1311068},
	{1311070, 1311069},
	{1311063, 1311070},
	{1311053, 1311052},
	{1311053, 1311063},
	{1311516, 1311053},
	{1311055, 1311516},
	{1311055, 1311082},
	{1311093, 1311055},
	{1311094, 1311093},
	{1311095, 1311094},
	{1311096, 1311095},
	{1311097, 1311096},
	{1311098, 1311097},
	{1311099, 1311098},
	{1311100, 1311099},
	{1311101, 1311100},
	{1376506, 1311101},
	{1376817, 1376908},
	{1376817, 1376506},
	{1376839, 1376817},
	{1376840, 1376839},
	{1376841, 1376840},
	{1376842, 1376841},
	{1376838, 1376842},
	{1376819, 1376838},
	{1376819, 1376907},
	{1376826, 1376819},
	{1376832, 1376826},
	{1376831, 1376832},
	{1376830, 1376831},
	{1376829, 1376830},
	{1376828, 1376829},
	{1376827, 1376828},
	{1376809, 1376827},
	{1376809, 1376898},
	{1376811, 1376809},
	{1376812, 1376811},
	{1376813, 1376812},
	{1376814, 1376813},
	{1376815, 1376814},
	{1376810, 1376815},
	{1376542, 1376910},
	{1376542, 1376810},
	{1376544, 1376542},
	{1376545, 1376544},
	{1376546, 1376545},
	{1376543, 1376546},
	{1376911, 1376543},
	{1376537, 1376911},
	{1376911, 1376912},
	{1376541, 1376537},
	{1376540, 1376541},
	{1376539, 1376540},
	{1376538, 1376539},
	{1376567, 1376520},
	{1376568, 1376567},
	{1376569, 1376568},
	{1376570, 1376569},
	{1376571, 1376570},
	{1376572, 1376571},
	{1376573, 1376572},
	{852297, 1376573},
	{852298, 852297},
	{852296, 852298},
	{852300, 852296},
	{852301, 852300},
	{852299, 852301},
	{852303, 852299},
	{852304, 852303},
	{852305, 852304},
	{852306, 852305},
	{852307, 852306},
	{852308, 852307},
	{852309, 852308},
	{852302, 852309},
	{852310, 852302},
	{852311, 852310},
	{852320, 852311},
	{852319, 852320},
	{852318, 852319},
	{852317, 852318},
	{852316, 852317},
	{852315, 852316},
	{852314, 852315},
	{852313, 852314},
	{852312, 852313},
	{852265, 852312},
	{852267, 852264},
	{852268, 852267},
	{852269, 852268},
	{852270, 852269},
	{852271, 852270},
	{852272, 852271},
	{852273, 852272},
	{852274, 852273},
	{852275, 852274},
	{852266, 852275},
	{852276, 852266},
	{852278, 852276},
	{852279, 852278},
	{852280, 852279},
	{852281, 852280},
	{852282, 852281},
	{852283, 852282},
	{852284, 852283},
	{852285, 852284},
	{852286, 852285},
	{852277, 852286},
	{852289, 852277},
	{852288, 852289},
	{852287, 852288},
	{852290, 852287},
	{852291, 852290},
	{852292, 852291},
	{852293, 852292},
	{852294, 852293},
	{852295, 852294},
	{1376562, 852295},
	{1376563, 1376562},
	{1376564, 1376563},
	{1376561, 1376564},
	{1376566, 1376561},
	{1376565, 1376566},
	{1376555, 1376519},
	{1376556, 1376555},
	{1376557, 1376556},
	{1376558, 1376557},
	{1376559, 1376558},
	{1376560, 1376559},
	{1376918, 1376554},
	{1376922, 1376918},
	{1376923, 1376922},
	{1376924, 1376923},
	{1376921, 1376924},
	{1376440, 1376921},
	{1376712, 1376440},
	{1376716, 1376712},
	{1376715, 1376716},
	{1376714, 1376715},
	{1376713, 1376714},
	{1376710, 1376713},
	{1376701, 1376710},
	{1376709, 1376701},
	{1376708, 1376709},
	{1376707, 1376708},
	{1376706, 1376707},
	{1376705, 1376706},
	{1376704, 1376705},
	{1376703, 1376704},
	{1376702, 1376703},
	{1376686, 1376684},
	{1376687, 1376686},
	{1376688, 1376687},
	{1376689, 1376688},
	{1376691, 1376689},
	{1376692, 1376691},
	{1376690, 1376692},
	{1376685, 1376690},
	{1376675, 1376685},
	{1376936, 1376675},
	{1376850, 1376851},
	{1376848, 1376672},
	{1376847, 1376848},
	{1376846, 1376847},
	{1376845, 1376846},
	{1376844, 1376845},
	{1376843, 1376844},
	{1376949, 1376843},
	{1376951, 1376949},
	{1376950, 1376951},
	{1376937, 1376950},
	{1376937, 1376939},
	{1376657, 1376937},
	{1376663, 1376657},
	{1376662, 1376663},
	{1376661, 1376662},
	{1376660, 1376661},
	{1376659, 1376660},
	{1376658, 1376659},
	{1376656, 1376658},
	{1376656, 1376941},
	{1376647, 1376656},
	{1376648, 1376647},
	{1376649, 1376648},
	{1376650, 1376649},
	{1376942, 1376650},
	{1376942, 1376943},
	{1376631, 1376942},
	{1376633, 1376631},
	{1376637, 1376633},
	{1376636, 1376637},
	{1376635, 1376636},
	{1376634, 1376635},
	{1376632, 1376634},
	{1376732, 1376632},
	{1376735, 1376732},
	{1376740, 1376735},
	{1376739, 1376740},
	{1376738, 1376739},
	{1376737, 1376738},
	{1376736, 1376737},
	{1376863, 1376736},
	{1376864, 1376863},
	{1376865, 1376864},
	{1376866, 1376865},
	{1376867, 1376866},
	{1376862, 1376867},
	{1376869, 1376862},
	{1376870, 1376869},
	{1376871, 1376870},
	{1376872, 1376871},
	{1376873, 1376872},
	{1376874, 1376873},
	{1376875, 1376874},
	{1376876, 1376875},
	{1376868, 1376876},
	{1376878, 1376868},
	{1376879, 1376878},
	{1376880, 1376879},
	{1376881, 1376880},
	{1376882, 1376881},
	{1376883, 1376882},
	{1376884, 1376883},
	{1376885, 1376884},
	{1376886, 1376885},
	{1376877, 1376886},
	{1376734, 1376877},
	{1376733, 1376732},
	{1376944, 1376733},
	{1376945, 1376947},
	{1376944, 1376945},
	{1376615, 1376944},
	{1376616, 1376615},
	{1376614, 1376616},
	{1376613, 1376614},
	{1376612, 1376613},
	{1376611, 1376612},
	{1376610, 1376611},
	{1376609, 1376610},
	{1376608, 1376609},
	{1376510, 1376608},
	{1376510, 1376948},
	{1376507, 1376510},
	{1376509, 1376507},
	{1376508, 1376509},
	{1311106, 1376508},
	{1311105, 1311106},
	{1311104, 1311105},
	{1311103, 1311104},
	{1311102, 1311103},
	{1311034, 1311102},
	{1311043, 1311034},
	{1311042, 1311043},
	{1311041, 1311042},
	{1311040, 1311041},
	{1311039, 1311040},
	{1311038, 1311039},
	{1311037, 1311038},
	{1311036, 1311037},
	{1311035, 1311036},
	{1311000, 1311035},
	{1311001, 1311000},
	{1311001, 1311513},
	{1311475, 1311001},
	{1310991, 1311512},
	{1310991, 1310784},
	{1310991, 1311475},
	{1310992, 1310991},
	{1311006, 1311007},
	{1311005, 1311006},
	{1311002, 1311512},
	{1311002, 1311005},
	{1311003, 1311513},
	{1311003, 1311470},
	{1311003, 1311002},
	{1311025, 1311003},
	{1311026, 1311025},
	{1311027, 1311026},
	{1311028, 1311027},
	{1311029, 1311028},
	{1311030, 1311029},
	{1310999, 1310992},
	{1310998, 1310999},
	{1310997, 1310998},
	{1310996, 1310997},
	{1310995, 1310996},
	{1310994, 1310995},
	{1310993, 1310994},
	{1311152, 1310993},
	{1311156, 1311152},
	{1311155, 1311156},
	{1311154, 1311155},
	{1311153, 1311154},
	{1311151, 1311153},
	{1311151, 1311511},
	{1311489, 1311151},
	{1311490, 1311489},
	{1311488, 1311490},
	{1311487, 1311510},
	{1311487, 1311488},
	{1311491, 1311487},
	{1311494, 1311491},
	{1311493, 1311494},
	{1311492, 1311493},
	{1310921, 1311492},
	{1310929, 1310921},
	{1310928, 1310929},
	{1310927, 1310928},
	{1310926, 1310927},
	{1310925, 1310926},
	{1310924, 1310925},
	{1310923, 1310924},
	{1310922, 1310923},
	{1310877, 1310922},
	{1310886, 1310877},
	{1310885, 1310886},
	{1310884, 1310885},
	{1310883, 1310884},
	{1310882, 1310883},
	{1310881, 1310882},
	{1310880, 1310881},
	{1310879, 1310880},
	{1310878, 1310879},
	{1311519, 1310878},
	{1311522, 1311519},
	{1311521, 1311522},
	{1311520, 1311521},
	{786827, 1311520},
	{786507, 786827},
	{786511, 786507},
	{786510, 786511},
	{786509, 786510},
	{786508, 786509},
	{786731, 786508},
	{786731, 786730},
	{786730, 786733},
	{786792, 786436},
	{786731, 786818},
	{786718, 786730},
	{786719, 786718},
	{786720, 786719},
	{786717, 786720},
	{786716, 786717},
	{786506, 786716},
	{1310873, 786506},
	{1310874, 1310873},
	{1310875, 1310874},
	{1310876, 1310875},
	{1310889, 1310876},
	{1310890, 1310889},
	{1310891, 1310890},
	{1310892, 1310891},
	{1310893, 1310892},
	{1310894, 1310893},
	{1310895, 1310894},
	{1310896, 1310895},
	{1310897, 1310896},
	{1310888, 1310897},
	{1310931, 1310888},
	{1310932, 1310931},
	{1310933, 1310932},
	{1310934, 1310933},
	{1310935, 1310934},
	{1310936, 1310935},
	{1310937, 1310936},
	{1310938, 1310937},
	{1310930, 1310938},
	{1310939, 1311510},
	{1310939, 1310930},
	{1311497, 1310939},
	{1311498, 1311497},
	{1311499, 1311498},
	{1311496, 1311499},
	{1311495, 1311496},
	{1311495, 1311511},
	{1310988, 1311495},
	{1310989, 1310988},
	{1310990, 1310989},
	{1310987, 1310990},
	{1310986, 1310987},
	{1310985, 1310986},
	{1310984, 1310985},
	{1311004, 1310984},
	{1311008, 1311004},
	{1311007, 1311008},
	{1311031, 1311030},
	{1311032, 1311031},
	{1311033, 1311032},
	{1311024, 1311033},
	{1311107, 1311024},
	{1311112, 1311107},
	{1311111, 1311112},
	{1311110, 1311111},
	{1311109, 1311110},
	{1311108, 1311109},
	{1376515, 1311108},
	{1376514, 1376515},
	{1376513, 1376514},
	{1376512, 1376513},
	{1376511, 1376512},
	{1376511, 1376948},
	{1376618, 1376511},
	{1376619, 1376618},
	{1376620, 1376619},
	{1376621, 1376620},
	{1376622, 1376621},
	{1376623, 1376622},
	{1376624, 1376623},
	{1376625, 1376624},
	{1376617, 1376625},
	{1376888, 1376617},
	{1376889, 1376888},
	{1376887, 1376889},
	{1376627, 1376887},
	{1376628, 1376627},
	{1376629, 1376628},
	{1376626, 1376629},
	{1376630, 1376946},
	{1376630, 1376626},
	{1376946, 1376947},
	{1376946, 1376630},
	{1376639, 1376630},
	{1376640, 1376639},
	{1376641, 1376640},
	{1376642, 1376641},
	{1376643, 1376642},
	{1376644, 1376643},
	{1376645, 1376644},
	{1376638, 1376645},
	{1376646, 1376943},
	{1376646, 1376638},
	{1376651, 1376646},
	{1376654, 1376651},
	{1376653, 1376654},
	{1376652, 1376653},
	{1376655, 1376941},
	{1376655, 1376652},
	{1376665, 1376655},
	{1376666, 1376665},
	{1376667, 1376666},
	{1376668, 1376667},
	{1376669, 1376668},
	{1376670, 1376669},
	{1376664, 1376670},
	{1376671, 1376938},
	{1376671, 1376664},
	{1376849, 1376671},
	{1376854, 1376849},
	{1376853, 1376854},
	{1376852, 1376853},
	{1376851, 1376852},
	{1310734, 1311000},
	{1310735, 1310734},
	{1310736, 1310735},
	{1310737, 1310736},
	{1310738, 1310737},
	{1310741, 1310738},
	{1310740, 1310741},
	{1310739, 1310740},
	{1310733, 1310739},
	{1310742, 1310733},
	{1310744, 1310742},
	{1310745, 1310744},
	{1310746, 1310745},
	{1310747, 1310746},
	{1310748, 1310747},
	{1310749, 1310748},
	{1310750, 1310749},
	{1310751, 1310750},
	{1310752, 1310751},
	{1310743, 1310752},
	{1310754, 1310743},
	{1310755, 1310754},
	{1310756, 1310755},
	{1310757, 1310756},
	{1310758, 1310757},
	{1310759, 1310758},
	{1310760, 1310759},
	{1310761, 1310760},
	{1310753, 1310761},
	{1310762, 1310753},
	{1310764, 1310762},
	{1310765, 1310764},
	{1310766, 1310765},
	{1310767, 1310766},
	{1310768, 1310767},
	{1310769, 1310768},
	{1310770, 1310769},
	{1310771, 1310770},
	{1310772, 1310771},
	{1310763, 1310772},
	{1310774, 1310763},
	{1310775, 1310774},
	{1310776, 1310775},
	{1310777, 1310776},
	{1310778, 1310777},
	{1310779, 1310778},
	{1310780, 1310779},
	{1310781, 1310780},
	{1310782, 1310781},
	{1310773, 1310782},
	{1310832, 1310773},
	{1245826, 1310832},
	{1245825, 1245826},
	{1245824, 1245825},
	{1245823, 1245824},
	{1245822, 1245823},
	{1245262, 1245822},
	{1245262, 1245319},
	{1245271, 1245262},
	{1245272, 1245271},
	{1245263, 1245272},
	{1245270, 1245263},
	{1245269, 1245270},
	{1245268, 1245269},
	{1245267, 1245268},
	{1245266, 1245267},
	{1245265, 1245266},
	{1245264, 1245265},
	{721078, 1245264},
	{721079, 721078},
	{721085, 721079},
	{721084, 721085},
	{721083, 721084},
	{721082, 721083},
	{721081, 721082},
	{721080, 721081},
	{721227, 721080},
	{721227, 721232},
	{721228, 721227},
	{721230, 721228},
	{721229, 721230},
	{721072, 721229},
	{721077, 721072},
	{721076, 721077},
	{721075, 721076},
	{721074, 721075},
	{721073, 721074},
	{721193, 721073},
	{721062, 721193},
	{721071, 721062},
	{721070, 721071},
	{721069, 721070},
	{721068, 721069},
	{721067, 721068},
	{721066, 721067},
	{721065, 721066},
	{721064, 721065},
	{721063, 721064},
	{720932, 721063},
	{720933, 720932},
	{720934, 720933},
	{720935, 720934},
	{720936, 720935},
	{720937, 720936},
	{720938, 720937},
	{720939, 720938},
	{196616, 720939},
	{196615, 196616},
	{196698, 196615},
	{196702, 196698},
	{196701, 196702},
	{196700, 196701},
	{196699, 196700},
	{196792, 196699},
	{196798, 196792},
	{196797, 196798},
	{196796, 196797},
	{196795, 196796},
	{196794, 196795},
	{196793, 196794},
	{196784, 196793},
	{196693, 196784},
	{196697, 196693},
	{196784, 196785},
	{196696, 196697},
	{196695, 196696},
	{196694, 196695},
	{196684, 196694},
	{196692, 196684},
	{196691, 196692},
	{196690, 196691},
	{196689, 196690},
	{196688, 196689},
	{196687, 196688},
	{196686, 196687},
	{196685, 196686},
	{196674, 196685},
	{196683, 196674},
	{196682, 196683},
	{196681, 196682},
	{196680, 196681},
	{196679, 196680},
	{196678, 196679},
	{196677, 196678},
	{196676, 196677},
	{196675, 196676},
	{196665, 196675},
	{196673, 196665},
	{196672, 196673},
	{196671, 196672},
	{196670, 196671},
	{196669, 196670},
	{196668, 196669},
	{196667, 196668},
	{196666, 196667},
	{196763, 196666},
	{196765, 196763},
	{196764, 196765},
	{196762, 196764},
	{196659, 196762},
	{196664, 196659},
	{196663, 196664},
	{196662, 196663},
	{196762, 196767},
	{196661, 196662},
	{196660, 196661},
	{196752, 196660},
	{196761, 196752},
	{196760, 196761},
	{196759, 196760},
	{196758, 196759},
	{196757, 196758},
	{196756, 196757},
	{196755, 196756},
	{196754, 196755},
	{196753, 196754},
	{196617, 196753},
	{196618, 196617},
	{196619, 196618},
	{196620, 196619},
	{196621, 196620},
	{196622, 196621},
	{196623, 196622},
	{196624, 196623},
	{131103, 196624},
	{131105, 131103},
	{131106, 131105},
	{131107, 131106},
	{131108, 131107},
	{131109, 131108},
	{131110, 131109},
	{131111, 131110},
	{131112, 131111},
	{131113, 131112},
	{131104, 131113},
	{131115, 131104},
	{131116, 131115},
	{131117, 131116},
	{131118, 131117},
	{131119, 131118},
	{131120, 131119},
	{131121, 131120},
	{131122, 131121},
	{131123, 131122},
	{131114, 131123},
	{131124, 131114},
	{131125, 131124},
	{131126, 131125},
	{131127, 131126},
	{65537, 131127},
	{65538, 65537},
	{65539, 65538},
	{65540, 65539},
	{65541, 65540},
	{65536, 65541},
	{65646, 65536},
	{65647, 65646},
	{65664, 65647},
	{65634, 65664},
	{65642, 65634},
	{65641, 65642},
	{65640, 65641},
	{65639, 65640},
	{65638, 65639},
	{65637, 65638},
	{65636, 65637},
	{65635, 65636},
	{65719, 65727},
	{65758, 65620},
	{65633, 65635},
	{65606, 65605},
	{65607, 65606},
	{65614, 65607},
	{65613, 65614},
	{65612, 65613},
	{65611, 65612},
	{65610, 65611},
	{65609, 65610},
	{65608, 65609},
	{65682, 65608},
	{65682, 65630},
	{65643, 65664},
	{65645, 65643},
	{65644, 65645},
	{65627, 65644},
	{65628, 65627},
	{65629, 65628},
	{65632, 65629},
	{65631, 65632},
	{65630, 65631},
	{65603, 65682},
	{65604, 65603},
	{39, 65604},
	{38, 39},
	{37, 38},
	{1, 37},
	{2, 1},
	{3, 2},
	{4, 3},
	{5, 4},
	{6, 5},
	{0, 6},
	{106, 0},
	{136, 106},
	{137, 136},
	{138, 137},
	{139, 138},
	{140, 139},
	{135, 140},
	{110, 135},
	{111, 110},
	{112, 111},
	{109, 112},
	{102, 109},
	{113, 103},
	{114, 113},
	{115, 114},
	{524626, 115},
	{524627, 524626},
	{524628, 524627},
	{524629, 524628},
	{524625, 524629},
	{524630, 524625},
	{524630, 524631},
	{108, 106},
	{107, 108},
	{117, 107},
	{118, 117},
	{119, 118},
	{120, 119},
	{121, 120},
	{122, 121},
	{116, 122},
	{524632, 116},
	{524631, 524632},
	{524291, 524630},
	{524290, 524291},
	{524289, 524290},
	{524288, 524289},
	{524293, 524288},
	{524294, 524293},
	{524295, 524294},
	{524296, 524295},
	{524297, 524296},
	{524298, 524297},
	{524299, 524298},
	{524300, 524299},
	{524292, 524300},
	{524302, 524292},
	{524303, 524302},
	{524304, 524303},
	{524305, 524304},
	{524306, 524305},
	{524307, 524306},
	{524308, 524307},
	{524309, 524308},
	{524310, 524309},
	{524301, 524310},
	{1048815, 524301},
	{1048816, 1048815},
	{1048817, 1048816},
	{1048818, 1048817},
	{1048819, 1048818},
	{1048820, 1048819},
	{1048821, 1048820},
	{1048822, 1048821},
	{1048823, 1048822},
	{1048814, 1048823},
	{1048825, 1048814},
	{1048826, 1048825},
	{1048827, 1048826},
	{1048828, 1048827},
	{1048829, 1048828},
	{1048830, 1048829},
	{1048831, 1048830},
	{1048832, 1048831},
	{1048824, 1048832},
	{1048834, 1048824},
	{1048835, 1048834},
	{1048836, 1048835},
	{1048833, 1048836},
	{1048864, 1048833},
	{1048868, 1048864},
	{1048867, 1048868},
	{1048866, 1048867},
	{1048865, 1048866},
	{1048588, 1048865},
	{1048589, 1048588},
	{1572906, 1048589},
	{1572905, 1572906},
	{1572904, 1572905},
	{1572903, 1572904},
	{1572902, 1572903},
	{1572901, 1572902},
	{1572936, 1572901},
	{1572937, 1572914},
	{1572908, 1572936},
	{1572909, 1572908},
	{1572910, 1572909},
	{1572911, 1572910},
	{1572912, 1572911},
	{1572907, 1572912},
	{1572920, 1572907},
	{1572921, 1572920},
	{1572922, 1572921},
	{1572923, 1572922},
	{1572924, 1572923},
	{1572925, 1572924},
	{1572926, 1572925},
	{1572919, 1572926},
	{1638442, 1572919},
	{1638443, 1638442},
	{1638441, 1638443},
	{1638987, 1638441},
	{1639307, 1639306},
	{1639312, 1639307},
	{1639311, 1639312},
	{1639310, 1639311},
	{1639309, 1639310},
	{1639308, 1639309},
	{1639302, 1639308},
	{1639302, 1638964},
	{1638976, 1638977},
	{1638975, 1638976},
	{1638974, 1638975},
	{1639304, 1639305},
	{1639305, 1639303},
	{1639303, 1639302},
	{1638972, 1639304},
	{1638972, 1638974},
	{1639242, 1638972},
	{1639244, 1639242},
	{1639245, 1639244},
	{1639246, 1639245},
	{1639247, 1639246},
	{1639248, 1639247},
	{1639249, 1639248},
	{1639250, 1639249},
	{1639251, 1639250},
	{1639243, 1639251},
	{1639206, 1639243},
	{1638437, 1639242},
	{1638440, 1638437},
	{1638439, 1638440},
	{1638438, 1638439},
	{1572927, 1638438},
	{1572935, 1572927},
	{1572934, 1572935},
	{1572933, 1572934},
	{1572932, 1572933},
	{1572931, 1572932},
	{1572930, 1572931},
	{1572929, 1572930},
	{1572928, 1572929},
	{1572913, 1572928},
	{1572918, 1572913},
	{1572917, 1572918},
	{1572916, 1572917},
	{1572915, 1572916},
	{1572914, 1572915},
	{1572895, 1572937},
	{1572896, 1572895},
	{1572897, 1572896},
	{1572898, 1572897},
	{1572899, 1572898},
	{1572900, 1572899},
	{1048587, 1572900},
	{1048586, 1048587},
	{1048838, 1048586},
	{1048839, 1048838},
	{1048840, 1048839},
	{1048841, 1048840},
	{1048842, 1048841},
	{1048843, 1048842},
	{1048844, 1048843},
	{1048845, 1048844},
	{1048846, 1048845},
	{1048837, 1048846},
	{1048848, 1048837},
	{1048849, 1048848},
	{1048850, 1048849},
	{1048851, 1048850},
	{1048852, 1048851},
	{1048853, 1048852},
	{1048854, 1048853},
	{1048855, 1048854},
	{1048856, 1048855},
	{1048847, 1048856},
	{1048858, 1048847},
	{1048859, 1048858},
	{1048860, 1048859},
	{1048861, 1048860},
	{1048862, 1048861},
	{1048863, 1048862},
	{1048857, 1048863},
	{1048592, 1048857},
	{1048590, 1048592},
	{1048591, 1048590},
	{524312, 1048591},
	{524313, 524312},
	{524314, 524313},
	{524315, 524314},
	{524316, 524315},
	{524317, 524316},
	{524311, 524317},
	{524319, 524311},
	{524320, 524319},
	{524321, 524320},
	{524322, 524321},
	{524323, 524322},
	{524324, 524323},
	{524325, 524324},
	{524326, 524325},
	{524327, 524326},
	{524318, 524327},
	{524329, 524318},
	{524330, 524329},
	{524331, 524330},
	{524328, 524331},
	{524611, 524328},
	{524612, 524611},
	{524613, 524612},
	{524614, 524613},
	{524615, 524614},
	{524616, 524615},
	{524617, 524616},
	{524618, 524617},
	{58, 524618},
	{59, 58},
	{57, 59},
	{62, 57},
	{61, 62},
	{60, 61},
	{75, 63},
	{80, 75},
	{79, 80},
	{78, 79},
	{77, 78},
	{76, 77},
	{65, 76},
	{74, 65},
	{73, 74},
	{72, 73},
	{71, 72},
	{70, 71},
	{69, 70},
	{68, 69},
	{67, 68},
	{66, 67},
	{64, 66},
	{64, 82},
	{524619, 524611},
	{524624, 524619},
	{524623, 524624},
	{524622, 524623},
	{524621, 524622},
	{524620, 524621},
	{101, 524620},
	{91, 101},
	{100, 91},
	{99, 100},
	{98, 99},
	{97, 98},
	{96, 97},
	{95, 96},
	{94, 95},
	{93, 94},
	{92, 93},
	{81, 92},
	{90, 81},
	{89, 90},
	{88, 89},
	{87, 88},
	{86, 87},
	{85, 86},
	{84, 85},
	{83, 84},
	{82, 83},
	{34, 64},
	{35, 34},
	{36, 35},
	{33, 36},
	{32, 33},
	{31, 32},
	{30, 31},
	{40, 30},
	{41, 40},
	{42, 41},
	{65623, 42},
	{65624, 65623},
	{65625, 65624},
	{65626, 65625},
	{65622, 65626},
	{65748, 65622},
	{65749, 65748},
	{65750, 65749},
	{65751, 65750},
	{65747, 65751},
	{65746, 65747},
	{65753, 65746},
	{65621, 65746},
	{65616, 65621},
	{65617, 65616},
	{65618, 65617},
	{65619, 65618},
	{65615, 65619},
	{65620, 65615},
	{65598, 65762},
	{65762, 65598},
	{65763, 65762},
	{65764, 65763},
	{65765, 65764},
	{65766, 65765},
	{65767, 65766},
	{65761, 65767},
	{65602, 65761},
	{65601, 65602},
	{65600, 65601},
	{65599, 65600},
	{65663, 65661},
	{65663, 65599},
	{65754, 65753},
	{65755, 65754},
	{65756, 65755},
	{65757, 65756},
	{65752, 65757},
	{65657, 65752},
	{65658, 65657},
	{65659, 65658},
	{65656, 65659},
	{65655, 65656},
	{65654, 65655},
	{65653, 65654},
	{65660, 65653},
	{65662, 65660},
	{65661, 65662},
	{65566, 65663},
	{65565, 65566},
	{65564, 65565},
	{65563, 65564},
	{65562, 65563},
	{65561, 65562},
	{131129, 65561},
	{131130, 131129},
	{131131, 131130},
	{131132, 131131},
	{131133, 131132},
	{131134, 131133},
	{131135, 131134},
	{131136, 131135},
	{131137, 131136},
	{131128, 131137},
	{131139, 131128},
	{131140, 131139},
	{131141, 131140},
	{131142, 131141},
	{131143, 131142},
	{131144, 131143},
	{131145, 131144},
	{131146, 131145},
	{131138, 131146},
	{131148, 131138},
	{131149, 131148},
	{131150, 131149},
	{131151, 131150},
	{131152, 131151},
	{131153, 131152},
	{131154, 131153},
	{131155, 131154},
	{131156, 131155},
	{131147, 131156},
	{131157, 131147},
	{196626, 131157},
	{196627, 196626},
	{196628, 196627},
	{196629, 196628},
	{196630, 196629},
	{196631, 196630},
	{196632, 196631},
	{196633, 196632},
	{196625, 196633},
	{196704, 196625},
	{196705, 196704},
	{196706, 196705},
	{196707, 196706},
	{196708, 196707},
	{196709, 196708},
	{196710, 196709},
	{196711, 196710},
	{196712, 196711},
	{196703, 196712},
	{196714, 196703},
	{196715, 196714},
	{196716, 196715},
	{196717, 196716},
	{196718, 196717},
	{196719, 196718},
	{196720, 196719},
	{196721, 196720},
	{196722, 196721},
	{196713, 196722},
	{196723, 196713},
	{196724, 196723},
	{196725, 196724},
	{262145, 196725},
	{262146, 262145},
	{262147, 262146},
	{262148, 262147},
	{262144, 262148},
	{262149, 262144},
	{262150, 262149},
	{262151, 262150},
	{262152, 262151},
	{262153, 262152},
	{262154, 262153},
	{262155, 262154},
	{262156, 262155},
	{262157, 262156},
	{196726, 262157},
	{196728, 196726},
	{196729, 196728},
	{196730, 196729},
	{196731, 196730},
	{196732, 196731},
	{196733, 196732},
	{196734, 196733},
	{196735, 196734},
	{196736, 196735},
	{196727, 196736},
	{196738, 196727},
	{196739, 196738},
	{196740, 196739},
	{196741, 196740},
	{196742, 196741},
	{196743, 196742},
	{196744, 196743},
	{196745, 196744},
	{196746, 196745},
	{196737, 196746},
	{196747, 196737},
	{196748, 196747},
	{196749, 196748},
	{196750, 196749},
	{196751, 196750},
	{720992, 196751},
	{720993, 720992},
	{720994, 720993},
	{720991, 720994},
	{720996, 720991},
	{720997, 720996},
	{720995, 720997},
	{721050, 720995},
	{721051, 721050},
	{721052, 721051},
	{721053, 721052},
	{721054, 721053},
	{721055, 721054},
	{721056, 721055},
	{721057, 721056},
	{721049, 721057},
	{721059, 721049},
	{721060, 721059},
	{721061, 721060},
	{721058, 721061},
	{720941, 721058},
	{720942, 720941},
	{720943, 720942},
	{720944, 720943},
	{720945, 720944},
	{720946, 720945},
	{720947, 720946},
	{720940, 720947},
	{721097, 720940},
	{721098, 721097},
	{721096, 721098},
	{721086, 721096},
	{721095, 721086},
	{721094, 721095},
	{721093, 721094},
	{721092, 721093},
	{721091, 721092},
	{721090, 721091},
	{721089, 721090},
	{721088, 721089},
	{721087, 721088},
	{1245282, 721087},
	{1245285, 1245282},
	{1245284, 1245285},
	{1245283, 1245284},
	{1245273, 1245283},
	{1245275, 1245273},
	{1245276, 1245275},
	{1245277, 1245276},
	{1245278, 1245277},
	{1245279, 1245278},
	{1245280, 1245279},
	{1245281, 1245280},
	{1245274, 1245281},
	{1310823, 1245274},
	{1310831, 1310823},
	{1310830, 1310831},
	{1310829, 1310830},
	{1310828, 1310829},
	{1310827, 1310828},
	{1310826, 1310827},
	{1310825, 1310826},
	{1310824, 1310825},
	{1310813, 1310824},
	{1310822, 1310813},
	{1310821, 1310822},
	{1310820, 1310821},
	{1310819, 1310820},
	{1310818, 1310819},
	{1310817, 1310818},
	{1310816, 1310817},
	{1310815, 1310816},
	{1310814, 1310815},
	{1310803, 1310814},
	{1310812, 1310803},
	{1310811, 1310812},
	{1310810, 1310811},
	{1310809, 1310810},
	{1310808, 1310809},
	{1310807, 1310808},
	{1310806, 1310807},
	{1310805, 1310806},
	{1310804, 1310805},
	{1310793, 1310804},
	{1310802, 1310793},
	{1310801, 1310802},
	{1310800, 1310801},
	{1310799, 1310800},
	{1310798, 1310799},
	{1310797, 1310798},
	{1310796, 1310797},
	{1310795, 1310796},
	{1310794, 1310795},
	{1310783, 1310794},
	{1310792, 1310783},
	{1310791, 1310792},
	{1310790, 1310791},
	{1310789, 1310790},
	{1310788, 1310789},
	{1310787, 1310788},
	{1310786, 1310787},
	{1310785, 1310786},
	{1310784, 1310785},
	{1245534, 1245539},
	{1245429, 1245431},
	{1245557, 1245563},
	{721140, 720980},
	{1245301, 1245296},
	{1245302, 1245301},
	{1245303, 1245302},
	{1245304, 1245303},
	{1245305, 1245304},
	{1245306, 1245305},
	{1245307, 1245306},
	{1245300, 1245307},
	{1245309, 1245300},
	{1245310, 1245309},
	{1245311, 1245310},
	{1245312, 1245311},
	{1245313, 1245312},
	{1245314, 1245313},
	{1245315, 1245314},
	{1245316, 1245315},
	{1245317, 1245316},
	{1245308, 1245317},
	{1245318, 1245308},
	{1245321, 1245318},
	{1245320, 1245321},
	{1245319, 1245320},
	{1245332, 1245273},
	{1245333, 1245332},
	{1245334, 1245333},
	{1245335, 1245334},
	{1245336, 1245335},
	{1245337, 1245336},
	{1310721, 1245337},
	{1310720, 1310721},
	{1310722, 1310720},
	{1310723, 1310722},
	{1310724, 1310723},
	{1310725, 1310724},
	{1310726, 1310725},
	{1310727, 1310726},
	{1245339, 1310727},
	{1245338, 1245339},
	{1245421, 1245338},
	{1245422, 1245421},
	{1245423, 1245422},
	{1245424, 1245423},
	{1245425, 1245424},
	{1245426, 1245425},
	{1245427, 1245426},
	{1245428, 1245427},
	{1245420, 1245428},
	{1245322, 1245420},
	{721191, 721177},
	{131208, 131207},
	{131202, 131201},
	{655453, 655455},
	{1769653, 1769655},
	{2293860, 2293832},
	{2294048, 2294142},
	{2294048, 2294150},
	{1769747, 1769748},
	{1704037, 1704042},
	{1769702, 1769681},
	{1769706, 1769721},
	{1835050, 1835052},
	{2359346, 2359344},
	{2359585, 2359361},
	{1835083, 1835074},
	{2425035, 2425036},
	{2424992, 2424993},
	{2424930, 2424934},
	{2424924, 2424925},
	{1900932, 1900948},
	{2359391, 2359405},
	{2294049, 2294118},
	{2162711, 2162713},
	{2162712, 2162719},
	{1639002, 1638987},
	{1639003, 1639002},
	{1638998, 1639003},
	{1639001, 1638998},
	{1639000, 1639001},
	{1638999, 1639000},
	{1638988, 1638999},
	{1638997, 1638988},
	{1638996, 1638997},
	{1638995, 1638996},
	{1638994, 1638995},
	{1638993, 1638994},
	{1638992, 1638993},
	{1638991, 1638992},
	{1638990, 1638991},
	{1638989, 1638990},
	{1638432, 1638989},
	{1638432, 1638555},
	{1638535, 1638432},
	{1638543, 1638535},
	{1638542, 1638543},
	{1638541, 1638542},
	{1638540, 1638541},
	{1638539, 1638540},
	{1638538, 1638539},
	{1638537, 1638538},
	{1638536, 1638537},
	{1638534, 1638514},
	{1638534, 1638536},
	{1114148, 1638534},
	{1638470, 1638478},
	{1638515, 1638470},
	{1638516, 1638515},
	{1638517, 1638516},
	{1638518, 1638517},
	{1638519, 1638518},
	{1638520, 1638519},
	{1638521, 1638520},
	{1638522, 1638521},
	{1638523, 1638522},
	{1638514, 1638523},
	{1638434, 1638436},
	{1638955, 1638434},
	{1638956, 1638955},
	{1638957, 1638956},
	{1638958, 1638957},
	{1638959, 1638958},
	{1638960, 1638959},
	{1638961, 1638960},
	{1638962, 1638961},
	{1638963, 1638962},
	{1638954, 1638963},
	{1638965, 1638954},
	{1638966, 1638965},
	{1638967, 1638966},
	{1638968, 1638967},
	{1638969, 1638968},
	{1638970, 1638969},
	{1638971, 1638970},
	{1638964, 1638971},
	{1639029, 1639028},
	{1639026, 1639029},
	{1639019, 1639026},
	{1639025, 1639019},
	{1639024, 1639025},
	{1639023, 1639024},
	{1639022, 1639023},
	{1639021, 1639022},
	{1639020, 1639021},
	{1639013, 1639020},
	{1639018, 1639013},
	{1639017, 1639018},
	{1639016, 1639017},
	{1639015, 1639016},
	{1639014, 1639015},
	{1639004, 1639014},
	{1639012, 1639004},
	{1639011, 1639012},
	{1639010, 1639011},
	{1639009, 1639010},
	{1639008, 1639009},
	{1639007, 1639008},
	{1639006, 1639007},
	{1639005, 1639006},
	{1638435, 1639050},
	{1638435, 1639005},
	{1638433, 1638545},
	{1638423, 1638433},
	{1638424, 1638423},
	{1638425, 1638424},
	{1638426, 1638425},
	{1638427, 1638426},
	{1638428, 1638427},
	{1638429, 1638428},
	{1638430, 1638429},
	{1638431, 1638430},
	{1638422, 1638431},
	{1638981, 1638422},
	{1638986, 1638981},
	{1638985, 1638986},
	{1638984, 1638985},
	{1638983, 1638984},
	{1638982, 1638983},
	{1638973, 1638982},
	{1638980, 1638973},
	{1638979, 1638980},
	{1638978, 1638979},
	{1638977, 1638978},
	{1114147, 1114148},
	{1114146, 1114147},
	{1114145, 1114146},
	{1114150, 1114145},
	{1114151, 1114150},
	{1114152, 1114151},
	{1114153, 1114152},
	{1114154, 1114153},
	{1114155, 1114154},
	{1114156, 1114155},
	{1114157, 1114156},
	{1114149, 1114157},
	{1114134, 1114149},
	{1114135, 1114134},
	{1114133, 1114135},
	{1114383, 1114133},
	{1114390, 1114383},
	{1114391, 1114390},
	{1114392, 1114391},
	{1114393, 1114392},
	{1114394, 1114393},
	{1114395, 1114394},
	{1114396, 1114395},
	{1114389, 1114396},
	{1114448, 1114389},
	{1114398, 1114448},
	{1114399, 1114398},
	{1114400, 1114399},
	{1114401, 1114400},
	{1114397, 1114401},
	{1114382, 1114385},
	{1114382, 1114397},
	{1114136, 1114382},
	{1114138, 1114136},
	{1114137, 1114138},
	{1114132, 1114137},
	{1114384, 1114383},
	{1114388, 1114384},
	{1114387, 1114388},
	{1114386, 1114387},
	{1114385, 1114386},
	{1114139, 1114132},
	{1114140, 1114139},
	{1114141, 1114140},
	{1114359, 1114141},
	{1114365, 1114359},
	{1114366, 1114365},
	{1114367, 1114366},
	{1114368, 1114367},
	{1114369, 1114368},
	{1114370, 1114369},
	{1114371, 1114370},
	{1114364, 1114371},
	{1114402, 1114364},
	{1114372, 1114402},
	{1114380, 1114372},
	{1114379, 1114380},
	{1114378, 1114379},
	{1114377, 1114378},
	{1114376, 1114377},
	{1114375, 1114376},
	{1114374, 1114375},
	{1114373, 1114374},
	{1114381, 1114360},
	{1114381, 1114373},
	{1114363, 1114362},
	{1114362, 1114361},
	{1114361, 1114359},
	{1114360, 1114363},
	{1114142, 1114381},
	{1114144, 1114142},
	{1114143, 1114144},
	{1114159, 1114143},
	{1114168, 1114159},
	{1114167, 1114168},
	{1114166, 1114167},
	{1114165, 1114166},
	{1114164, 1114165},
	{1114163, 1114164},
	{1114162, 1114163},
	{1114161, 1114162},
	{1114160, 1114161},
	{1114158, 1114160},
	{1638544, 1114158},
	{1638524, 1638544},
	{1638533, 1638524},
	{1638532, 1638533},
	{1638531, 1638532},
	{1638530, 1638531},
	{1638529, 1638530},
	{1638528, 1638529},
	{1638527, 1638528},
	{1638526, 1638527},
	{1638525, 1638526},
	{1638471, 1638525},
	{1638495, 1638471},
	{1638496, 1638495},
	{1638497, 1638496},
	{1638498, 1638497},
	{1638499, 1638498},
	{1638500, 1638499},
	{1638501, 1638500},
	{1638502, 1638501},
	{1638503, 1638502},
	{1638494, 1638503},
	{1638505, 1638494},
	{1638506, 1638505},
	{1638507, 1638506},
	{1638508, 1638507},
	{1638509, 1638508},
	{1638510, 1638509},
	{1638511, 1638510},
	{1638512, 1638511},
	{1638513, 1638512},
	{1638504, 1638513},
	{1638564, 1638504},
	{1638564, 1638565},
	{1638565, 1638571},
	{1638571, 1638570},
	{1638570, 1638569},
	{1638569, 1638568},
	{1638568, 1638567},
	{1638567, 1638566},
	{1638566, 1638433},
	{1639041, 1638564},
	{1639042, 1639041},
	{1639043, 1639042},
	{1639044, 1639043},
	{1639045, 1639044},
	{1639046, 1639045},
	{1639047, 1639046},
	{1639048, 1639047},
	{1639049, 1639048},
	{1639040, 1639049},
	{1639051, 1639040},
	{1639052, 1639051},
	{1639053, 1639052},
	{1639050, 1639053},
	{2162703, 1638435},
	{2162704, 2162703},
	{2162702, 2162704},
	{2162705, 2162702},
	{2163123, 2162705},
	{2163124, 2163123},
	{2163125, 2163124},
	{2163126, 2163125},
	{2163127, 2163126},
	{2163128, 2163127},
	{2163129, 2163128},
	{2163130, 2163129},
	{2163131, 2163130},
	{2163122, 2163131},
	{2163133, 2163122},
	{2163134, 2163133},
	{2163135, 2163134},
	{2163136, 2163135},
	{2163137, 2163136},
	{2163138, 2163137},
	{2163139, 2163138},
	{2163140, 2163139},
	{2163132, 2163140},
	{2162901, 2163132},
	{2163107, 2162901},
	{2163108, 2163107},
	{2163109, 2163108},
	{2163110, 2163109},
	{2163111, 2163110},
	{2163112, 2163111},
	{2163113, 2163112},
	{2163114, 2163113},
	{2163106, 2163114},
	{2163116, 2163106},
	{2163117, 2163116},
	{2163118, 2163117},
	{2163119, 2163118},
	{2163120, 2163119},
	{2163121, 2163120},
	{2163115, 2163121},
	{2162712, 2163171},
	{2162712, 2163115},
	{2163142, 2162705},
	{2163143, 2163142},
	{2163144, 2163143},
	{2163145, 2163144},
	{2163146, 2163145},
	{2163141, 2163146},
	{2163148, 2163141},
	{2163149, 2163148},
	{2163150, 2163149},
	{2163151, 2163150},
	{2163152, 2163151},
	{2163153, 2163152},
	{2163154, 2163153},
	{2163155, 2163154},
	{2163147, 2163155},
	{2163157, 2163147},
	{2163158, 2163157},
	{2163159, 2163158},
	{2163160, 2163159},
	{2163156, 2163160},
	{2163162, 2163156},
	{2163163, 2163162},
	{2163164, 2163163},
	{2163165, 2163164},
	{2163166, 2163165},
	{2163167, 2163166},
	{2163168, 2163167},
	{2163169, 2163168},
	{2163170, 2163169},
	{2163161, 2163170},
	{2163172, 2163161},
	{2163173, 2163172},
	{2163174, 2163173},
	{2163171, 2163174},
	{2163084, 2162711},
	{2163089, 2163084},
	{2163088, 2163089},
	{2163087, 2163088},
	{2163086, 2163087},
	{2163085, 2163086},
	{2163077, 2163085},
	{2163083, 2163077},
	{2163082, 2163083},
	{2163081, 2163082},
	{2163080, 2163081},
	{2163079, 2163080},
	{2163078, 2163079},
	{2162900, 2163078},
	{2163091, 2162900},
	{2163092, 2163091},
	{2163093, 2163092},
	{2163094, 2163093},
	{2163095, 2163094},
	{2163096, 2163095},
	{2163090, 2163096},
	{2163098, 2163090},
	{2163099, 2163098},
	{2163100, 2163099},
	{2163101, 2163100},
	{2163102, 2163101},
	{2163103, 2163102},
	{2163104, 2163103},
	{2163105, 2163104},
	{2163097, 2163105},
	{2163050, 2163097},
	{2163050, 2163052},
	{2163073, 2162711},
	{2163076, 2163073},
	{2163075, 2163076},
	{2163074, 2163075},
	{2163071, 2163074},
	{2163072, 2163071},
	{2163061, 2163072},
	{2163070, 2163061},
	{2163069, 2163070},
	{2163068, 2163069},
	{2163067, 2163068},
	{2163066, 2163067},
	{2163065, 2163066},
	{2163064, 2163065},
	{2163063, 2163064},
	{2163062, 2163063},
	{2163051, 2163062},
	{2163060, 2163051},
	{2163059, 2163060},
	{2163058, 2163059},
	{2163057, 2163058},
	{2163056, 2163057},
	{2163055, 2163056},
	{2163054, 2163055},
	{2163053, 2163054},
	{2163052, 2163053},
	{2162706, 2163050},
	{2162710, 2162706},
	{2162707, 2162710},
	{2162708, 2162707},
	{2162709, 2162708},
	{1638436, 2162709},
	{1639030, 1638434},
	{1639033, 1639030},
	{1639039, 1639033},
	{1639038, 1639039},
	{1639037, 1639038},
	{1639036, 1639037},
	{1639035, 1639036},
	{1639034, 1639035},
	{1639032, 1639034},
	{1639031, 1639032},
	{1638554, 1639031},
	{1638487, 1638554},
	{1638493, 1638487},
	{1638492, 1638493},
	{1638491, 1638492},
	{1638490, 1638491},
	{1638489, 1638490},
	{1638488, 1638489},
	{1638477, 1638488},
	{1638486, 1638477},
	{1638485, 1638486},
	{1638484, 1638485},
	{1638483, 1638484},
	{1638482, 1638483},
	{1638481, 1638482},
	{1638480, 1638481},
	{1638479, 1638480},
	{1638478, 1638479},
	{1639054, 1639060},
	{1638556, 1638554},
	{1638557, 1638556},
	{1638558, 1638557},
	{1638559, 1638558},
	{1638560, 1638559},
	{1638561, 1638560},
	{1638562, 1638561},
	{1638563, 1638562},
	{1638555, 1638563},
	{2162987, 2163036},
	{2162985, 2162987},
	{2163039, 2162985},
	{2163040, 2163039},
	{2163041, 2163040},
	{2163042, 2163041},
	{2163043, 2163042},
	{2687403, 2163043},
	{2687404, 2687403},
	{2687405, 2687404},
	{2687406, 2687405},
	{2687402, 2687406},
	{2687414, 2687402},
	{2687415, 2687414},
	{2687413, 2687415},
	{2687410, 2687413},
	{2687339, 2687410},
	{2687340, 2687339},
	{2687338, 2687340},
	{2687337, 2687338},
	{2687336, 2687337},
	{2687328, 2687336},
	{2687325, 2687328},
	{2687326, 2687325},
	{2687321, 2687326},
	{2687324, 2687321},
	{2687323, 2687324},
	{2687322, 2687323},
	{2687311, 2687322},
	{2687320, 2687311},
	{2687319, 2687320},
	{2687318, 2687319},
	{2687317, 2687318},
	{2687316, 2687317},
	{2687315, 2687316},
	{2687314, 2687315},
	{2687313, 2687314},
	{2687312, 2687313},
	{2687289, 2687312},
	{2687298, 2687289},
	{2687297, 2687298},
	{2687296, 2687297},
	{2687295, 2687296},
	{2687294, 2687295},
	{2687293, 2687294},
	{2687292, 2687293},
	{2687291, 2687292},
	{2687290, 2687291},
	{2687259, 2687290},
	{2687256, 2687259},
	{2687258, 2687256},
	{2687257, 2687258},
	{2687248, 2687257},
	{2687255, 2687248},
	{2687254, 2687255},
	{2687253, 2687254},
	{2687252, 2687253},
	{2687251, 2687252},
	{2687250, 2687251},
	{2687249, 2687250},
	{2687243, 2687249},
	{2687247, 2687243},
	{2687246, 2687247},
	{2687245, 2687246},
	{2687244, 2687245},
	{2687373, 2687244},
	{2687378, 2687373},
	{2687377, 2687378},
	{2687376, 2687377},
	{2687375, 2687376},
	{2687374, 2687375},
	{2687372, 2687374},
	{2687419, 2687372},
	{2687420, 2687419},
	{2687416, 2687420},
	{2687418, 2687416},
	{2687417, 2687418},
	{2687379, 2687417},
	{2687383, 2687379},
	{2687382, 2687383},
	{2687381, 2687382},
	{2687380, 2687381},
	{2687261, 2687380},
	{2687262, 2687261},
	{2687263, 2687262},
	{2687264, 2687263},
	{2687265, 2687264},
	{2687266, 2687265},
	{2687267, 2687266},
	{2687268, 2687267},
	{2687260, 2687268},
	{2687270, 2687260},
	{2687271, 2687270},
	{2687272, 2687271},
	{2687273, 2687272},
	{2687274, 2687273},
	{2687269, 2687274},
	{2687275, 2687269},
	{2687286, 2687275},
	{2687288, 2687286},
	{2687287, 2687288},
	{2687281, 2687287},
	{2687285, 2687281},
	{2687284, 2687285},
	{2687283, 2687284},
	{2687282, 2687283},
	{2687280, 2687282},
	{2687300, 2687280},
	{2687301, 2687300},
	{2687302, 2687301},
	{2687299, 2687302},
	{2687304, 2687299},
	{2687305, 2687304},
	{2687306, 2687305},
	{2687307, 2687306},
	{2687308, 2687307},
	{2687309, 2687308},
	{2687310, 2687309},
	{2687303, 2687310},
	{2687327, 2687303},
	{2687361, 2687327},
	{2687557, 2687327},
	{2687329, 2687557},
	{2687330, 2687329},
	{2687408, 2687330},
	{2687409, 2687408},
	{2687407, 2687409},
	{2687395, 2687341},
	{2687396, 2687395},
	{2687397, 2687396},
	{2687398, 2687397},
	{2687399, 2687398},
	{2687400, 2687399},
	{2687394, 2687400},
	{2687401, 2687394},
	{2163038, 2687401},
	{2163037, 2163038},
	{2163036, 2163037},
	{2687443, 2687445},
	{2687436, 2687442},
	{2687441, 2687436},
	{2687440, 2687441},
	{2687439, 2687440},
	{2687438, 2687439},
	{2687437, 2687438},
	{2687435, 2687437},
	{2687469, 2687435},
	{2687471, 2687469},
	{2687470, 2687471},
	{2687468, 2687470},
	{2687498, 2687468},
	{2687500, 2687498},
	{2687499, 2687500},
	{2687493, 2687499},
	{2687493, 2687495},
	{2687473, 2687493},
	{2687472, 2687473},
	{2687426, 2687472},
	{2687434, 2687426},
	{2687433, 2687434},
	{2687432, 2687433},
	{2687431, 2687432},
	{2687430, 2687431},
	{2687429, 2687430},
	{2687428, 2687429},
	{2687427, 2687428},
	{2687424, 2687427},
	{2687425, 2687424},
	{2621814, 2687425},
	{2621813, 2621814},
	{2621812, 2621813},
	{2621811, 2621812},
	{2621810, 2621811},
	{2621809, 2621810},
	{2621808, 2621809},
	{2621807, 2621808},
	{2621755, 2621807},
	{2621758, 2621755},
	{2621759, 2621758},
	{2621760, 2621759},
	{2621761, 2621760},
	{2621762, 2621761},
	{2621763, 2621762},
	{2621764, 2621763},
	{2621765, 2621764},
	{2621766, 2621765},
	{2621757, 2621766},
	{2621804, 2621757},
	{2621806, 2621804},
	{2621805, 2621806},
	{2621803, 2621805},
	{2621795, 2621803},
	{2621789, 2621795},
	{2621790, 2621789},
	{2621791, 2621790},
	{2621792, 2621791},
	{2621793, 2621792},
	{2621794, 2621793},
	{2621788, 2621794},
	{2621864, 2621788},
	{2621698, 2621864},
	{2621700, 2621698},
	{2621701, 2621700},
	{2621702, 2621701},
	{2621703, 2621702},
	{2621704, 2621703},
	{2621705, 2621704},
	{2621706, 2621705},
	{2621707, 2621706},
	{2621699, 2621707},
	{2621645, 2621699},
	{2621776, 2621645},
	{2621777, 2621776},
	{2621775, 2621777},
	{2621774, 2621775},
	{2621779, 2621774},
	{2621780, 2621779},
	{2621778, 2621780},
	{2621627, 2621778},
	{2621627, 2621651},
	{2621647, 2621627},
	{2621648, 2621647},
	{2621649, 2621648},
	{2621646, 2621649},
	{2621655, 2621650},
	{2621655, 2621646},
	{2621657, 2621655},
	{2621658, 2621657},
	{2621659, 2621658},
	{2621660, 2621659},
	{2621661, 2621660},
	{2621662, 2621661},
	{2621663, 2621662},
	{2621664, 2621663},
	{2621665, 2621664},
	{2621656, 2621665},
	{2621666, 2621656},
	{2621667, 2621666},
	{2621668, 2621667},
	{2621669, 2621668},
	{2621670, 2621669},
	{3145749, 2621670},
	{3145750, 3145749},
	{3145751, 3145750},
	{3145752, 3145751},
	{3145748, 3145752},
	{3145754, 3145748},
	{3145755, 3145754},
	{3145756, 3145755},
	{3145757, 3145756},
	{3145758, 3145757},
	{3145759, 3145758},
	{3145760, 3145759},
	{3145761, 3145760},
	{3145762, 3145761},
	{3145753, 3145762},
	{3145764, 3145753},
	{3145765, 3145764},
	{3145766, 3145765},
	{3145767, 3145766},
	{3145768, 3145767},
	{3145769, 3145768},
	{3145770, 3145769},
	{3145771, 3145770},
	{3145772, 3145771},
	{3145763, 3145772},
	{3145774, 3145763},
	{3145775, 3145774},
	{3145776, 3145775},
	{3145777, 3145776},
	{3145778, 3145777},
	{3145779, 3145778},
	{3145780, 3145779},
	{3145781, 3145780},
	{3145782, 3145781},
	{3145773, 3145782},
	{3145784, 3145773},
	{3145785, 3145784},
	{3145786, 3145785},
	{3145787, 3145786},
	{3145788, 3145787},
	{3145789, 3145788},
	{3145790, 3145789},
	{3145791, 3145790},
	{3145792, 3145791},
	{3145783, 3145792},
	{3145794, 3145783},
	{3145795, 3145794},
	{3145796, 3145795},
	{3145797, 3145796},
	{3145798, 3145797},
	{3145799, 3145798},
	{3145800, 3145799},
	{3145793, 3145800},
	{3145730, 3145793},
	{3145736, 3145730},
	{3145735, 3145736},
	{3145734, 3145735},
	{3145733, 3145734},
	{3145732, 3145733},
	{3145731, 3145732},
	{3145728, 3145731},
	{3145729, 3145728},
	{3670020, 3145729},
	{3670019, 3670020},
	{3670018, 3670019},
	{3670017, 3670018},
	{3670016, 3670017},
	{3670255, 3670016},
	{3670256, 3670255},
	{3670257, 3670256},
	{3670254, 3670257},
	{3670253, 3670254},
	{3670253, 3670126},
	{3670262, 3670258},
	{3670148, 3670262},
	{3670144, 3670148},
	{3670147, 3670144},
	{3670146, 3670147},
	{3670145, 3670146},
	{3670135, 3670145},
	{3670143, 3670135},
	{3670142, 3670143},
	{3670141, 3670142},
	{3670140, 3670141},
	{3670139, 3670140},
	{3670138, 3670139},
	{3670137, 3670138},
	{3670136, 3670137},
	{3145747, 3670136},
	{3145737, 3145747},
	{3145746, 3145737},
	{3145745, 3145746},
	{3145744, 3145745},
	{3145743, 3145744},
	{3145742, 3145743},
	{3145741, 3145742},
	{3145740, 3145741},
	{3145739, 3145740},
	{3145738, 3145739},
	{3145855, 3145738},
	{3145856, 3145855},
	{3145857, 3145856},
	{3145858, 3145857},
	{3145859, 3145858},
	{3145854, 3145859},
	{3145844, 3145854},
	{3145853, 3145844},
	{3145852, 3145853},
	{3145851, 3145852},
	{3145850, 3145851},
	{3145849, 3145850},
	{3145848, 3145849},
	{3145847, 3145848},
	{3145846, 3145847},
	{3145845, 3145846},
	{3145834, 3145845},
	{3145843, 3145834},
	{3145842, 3145843},
	{3145841, 3145842},
	{3145840, 3145841},
	{3145839, 3145840},
	{3145838, 3145839},
	{3145837, 3145838},
	{3145836, 3145837},
	{3145835, 3145836},
	{3145824, 3145835},
	{3145833, 3145824},
	{3145832, 3145833},
	{3145831, 3145832},
	{3145830, 3145831},
	{3145829, 3145830},
	{3145828, 3145829},
	{3145827, 3145828},
	{3145826, 3145827},
	{3145825, 3145826},
	{3145814, 3145825},
	{3145823, 3145814},
	{3145822, 3145823},
	{3145821, 3145822},
	{3145820, 3145821},
	{3145819, 3145820},
	{3145818, 3145819},
	{3145817, 3145818},
	{3145816, 3145817},
	{3145815, 3145816},
	{3145804, 3145815},
	{3145813, 3145804},
	{3145812, 3145813},
	{3145811, 3145812},
	{3145810, 3145811},
	{3145809, 3145810},
	{3145808, 3145809},
	{3145807, 3145808},
	{3145806, 3145807},
	{3145805, 3145806},
	{3145801, 3145805},
	{3145803, 3145801},
	{3145802, 3145803},
	{2621687, 3145802},
	{2621686, 2621687},
	{2621685, 2621686},
	{2621684, 2621685},
	{2621683, 2621684},
	{2621682, 2621683},
	{2621681, 2621682},
	{2621671, 2621681},
	{2621680, 2621671},
	{2621679, 2621680},
	{2621678, 2621679},
	{2621677, 2621678},
	{2621676, 2621677},
	{2621675, 2621676},
	{2621674, 2621675},
	{2621673, 2621674},
	{2621672, 2621673},
	{2621639, 2621672},
	{2621639, 2621634},
	{2621632, 2621639},
	{2621631, 2621632},
	{2621630, 2621631},
	{2621629, 2621630},
	{2621628, 2621629},
	{2621633, 2621628},
	{2621626, 2621633},
	{2621626, 2621635},
	{2621641, 2621626},
	{2621644, 2621641},
	{2621643, 2621644},
	{2621642, 2621643},
	{2621640, 2621642},
	{2621786, 2621640},
	{2621787, 2621786},
	{2621785, 2621787},
	{2621781, 2621785},
	{2621690, 2621781},
	{2621691, 2621690},
	{2621688, 2621691},
	{2621689, 2621688},
	{2621694, 2621689},
	{2621695, 2621694},
	{2621696, 2621695},
	{2621693, 2621696},
	{2621692, 2621693},
	{2621697, 2621692},
	{2621797, 2621697},
	{2621798, 2621797},
	{2621799, 2621798},
	{2621800, 2621799},
	{2621801, 2621800},
	{2621802, 2621801},
	{2621796, 2621802},
	{2621767, 2621796},
	{2621769, 2621767},
	{2621770, 2621769},
	{2621771, 2621770},
	{2621772, 2621771},
	{2621773, 2621772},
	{2621768, 2621773},
	{2622094, 2621768},
	{2622094, 2622100},
	{2622096, 2622094},
	{2622097, 2622096},
	{2622098, 2622097},
	{2622095, 2622098},
	{2621756, 2622095},
	{2621589, 2622093},
	{2621605, 2622141},
	{2621820, 2621756},
	{2621824, 2621820},
	{2621823, 2621824},
	{2621822, 2621823},
	{2621821, 2621822},
	{2621815, 2621821},
	{2621819, 2621815},
	{2621818, 2621819},
	{2621817, 2621818},
	{2621816, 2621817},
	{2687467, 2621816},
	{2687466, 2687467},
	{2687465, 2687466},
	{2687464, 2687465},
	{2687454, 2687464},
	{2687463, 2687454},
	{2687462, 2687463},
	{2687461, 2687462},
	{2687460, 2687461},
	{2687459, 2687460},
	{2687458, 2687459},
	{2687457, 2687458},
	{2687456, 2687457},
	{2687455, 2687456},
	{2687450, 2687455},
	{2687452, 2687450},
	{2687453, 2687452},
	{2687451, 2687453},
	{2687449, 2687451},
	{2687444, 2687449},
	{2687448, 2687444},
	{2687447, 2687448},
	{2687446, 2687447},
	{2687445, 2687446},
	{983555, 983556},
	{983555, 983558},
	{983492, 983504},
	{1507838, 983513},
	{983512, 1507836},
	{1507853, 1507849},
	{1507854, 1507541},
	{1507861, 1507864},
	{2490542, 2490712},
	{2359391, 2359405},
	{2294049, 2294118},
	{2162719, 2162720},
	{2162713, 2162714},
	{3670049, 3670048},
	{3670040, 3670039},
	{2687129, 2687132},
	{2687121, 2687122},
	{1442458, 1442460},
	{1442387, 1442389},
	{1442403, 1442397},
	{65868, 590181},
	{65683, 65910},
	{131247, 131175},
	{2687129, 2687132},
	{2687121, 2687122},
	{1442458, 1442460},
	{1442387, 1442389},
	{1442403, 1442397},
	{65868, 590181},
	{65683, 65910},
	{131247, 131175},
	{721310, 786906},
	{786909, 721310},
	{786913, 786909},
	{786912, 786913},
	{786911, 786912},
	{786910, 786911},
	{786812, 786910},
	{786815, 786812},
	{786814, 786815},
	{786813, 786814},
	{786816, 786813},
	{786750, 786816},
	{786749, 786750},
	{786748, 786749},
	{786747, 786748},
	{786729, 786747},
	{786727, 786729},
	{786728, 786727},
	{786457, 786728},
	{786465, 786457},
	{786464, 786465},
	{786463, 786464},
	{786462, 786463},
	{786461, 786462},
	{786460, 786461},
	{786459, 786460},
	{786458, 786459},
	{786447, 786458},
	{786456, 786447},
	{786455, 786456},
	{786454, 786455},
	{786453, 786454},
	{786452, 786453},
	{786451, 786452},
	{786450, 786451},
	{786449, 786450},
	{786448, 786449},
	{786437, 786448},
	{786446, 786437},
	{786445, 786446},
	{786444, 786445},
	{786443, 786444},
	{786442, 786443},
	{786441, 786442},
	{786440, 786441},
	{786439, 786440},
	{786438, 786439},
	{786436, 786821},
	{786436, 786438},
	{786497, 786436},
	{786498, 786497},
	{786499, 786498},
	{786500, 786499},
	{786501, 786500},
	{786502, 786501},
	{786503, 786502},
	{786504, 786503},
	{786505, 786504},
	{786496, 786505},
	{786807, 786496},
	{786806, 786807},
	{786805, 786806},
	{786805, 786823},
	{786804, 786805},
	{786804, 786822},
	{786696, 786804},
	{786697, 786696},
	{786698, 786697},
	{786699, 786698},
	{786700, 786699},
	{786701, 786700},
	{786702, 786701},
	{786703, 786702},
	{786704, 786703},
	{786695, 786704},
	{852345, 786695},
	{852345, 852347},
	{852241, 852345},
	{852240, 852241},
	{852348, 852240},
	{852353, 852348},
	{852348, 852349},
	{852354, 852353},
	{852355, 852354},
	{852356, 852355},
	{852357, 852356},
	{852358, 852357},
	{852359, 852358},
	{852360, 852359},
	{852352, 852360},
	{852350, 852352},
	{852350, 852351},
	{852248, 852350},
	{852242, 852248},
	{852243, 852242},
	{852244, 852243},
	{852245, 852244},
	{852246, 852245},
	{852247, 852246},
	{852361, 852247},
	{852418, 852361},
	{852418, 852419},
	{852423, 852418},
	{852425, 852423},
	{852424, 852425},
	{852332, 852424},
	{852333, 852332},
	{852335, 852333},
	{852334, 852335},
	{852260, 852334},
	{852259, 852260},
	{852178, 852259},
	{852169, 852178},
	{852176, 852169},
	{852175, 852176},
	{852174, 852175},
	{852173, 852174},
	{852172, 852173},
	{852171, 852172},
	{852170, 852171},
	{327793, 852170},
	{327792, 327793},
	{327829, 327792},
	{327831, 327829},
	{327830, 327831},
	{327789, 327830},
	{327788, 327789},
	{327787, 327788},
	{327786, 327787},
	{327785, 327786},
	{327784, 327785},
	{327783, 327784},
	{327782, 327783},
	{327781, 327782},
	{327780, 327781},
	{327726, 327780},
	{327731, 327726},
	{327728, 327731},
	{327728, 327862},
	{327809, 327728},
	{327808, 327809},
	{327807, 327808},
	{327804, 327807},
	{327806, 327804},
	{327805, 327806},
	{393266, 327805},
	{393275, 393266},
	{393274, 393275},
	{393273, 393274},
	{393272, 393273},
	{393271, 393272},
	{393270, 393271},
	{393269, 393270},
	{393268, 393269},
	{393267, 393268},
	{393265, 393267},
	{393427, 393265},
	{393428, 393427},
	{918028, 393428},
	{918029, 918028},
	{852328, 918029},
	{852324, 852328},
	{852327, 852324},
	{852326, 852327},
	{852325, 852326},
	{327840, 852325},
	{327839, 327840},
	{327838, 327839},
	{327837, 327838},
	{327836, 327837},
	{327835, 327836},
	{327794, 327835},
	{327803, 327794},
	{327802, 327803},
	{327801, 327802},
	{327800, 327801},
	{327799, 327800},
	{327798, 327799},
	{327797, 327798},
	{327796, 327797},
	{327795, 327796},
	{327727, 327795},
	{327730, 327727},
	{327725, 327730},
	{327725, 327859},
	{327771, 327725},
	{327772, 327771},
	{327773, 327772},
	{327774, 327773},
	{327775, 327774},
	{327776, 327775},
	{327777, 327776},
	{327778, 327777},
	{327779, 327778},
	{327770, 327779},
	{327832, 327770},
	{327833, 327832},
	{327790, 327833},
	{327791, 327790},
	{852162, 327791},
	{852163, 852162},
	{852164, 852163},
	{852165, 852164},
	{852166, 852165},
	{852167, 852166},
	{852168, 852167},
	{852161, 852168},
	{852177, 852161},
	{852262, 852177},
	{852263, 852262},
	{852261, 852263},
	{852256, 852261},
	{852258, 852256},
	{852257, 852258},
	{852255, 852257},
	{852249, 852255},
	{852254, 852249},
	{852253, 852254},
	{852252, 852253},
	{852251, 852252},
	{852250, 852251},
	{852239, 852250},
	{852231, 852239},
	{852238, 852231},
	{852237, 852238},
	{852236, 852237},
	{852235, 852236},
	{852234, 852235},
	{852233, 852234},
	{852232, 852233},
	{852230, 852232},
	{852230, 852351},
	{852222, 852230},
	{852229, 852222},
	{852228, 852229},
	{852227, 852228},
	{852226, 852227},
	{852225, 852226},
	{852224, 852225},
	{852223, 852224},
	{852216, 852223},
	{852216, 852349},
	{852220, 852216},
	{852219, 852220},
	{852218, 852219},
	{852217, 852218},
	{852221, 852217},
	{852331, 852221},
	{852331, 852346},
	{786687, 852331},
	{786694, 786687},
	{786693, 786694},
	{786692, 786693},
	{786691, 786692},
	{786690, 786691},
	{786689, 786690},
	{786688, 786689},
	{786639, 786688},
	{786639, 786822},
	{786638, 786823},
	{786638, 786649},
	{786638, 786639},
	{786486, 786638},
	{786495, 786486},
	{786494, 786495},
	{786493, 786494},
	{786492, 786493},
	{786491, 786492},
	{786490, 786491},
	{786489, 786490},
	{786488, 786489},
	{786487, 786488},
	{786820, 786487},
	{786820, 786821},
	{786476, 786820},
	{786485, 786476},
	{786484, 786485},
	{786483, 786484},
	{786482, 786483},
	{786481, 786482},
	{786480, 786481},
	{786479, 786480},
	{786478, 786479},
	{786477, 786478},
	{786466, 786477},
	{786475, 786466},
	{786474, 786475},
	{786473, 786474},
	{786472, 786473},
	{786471, 786472},
	{786470, 786471},
	{786469, 786470},
	{786468, 786469},
	{786467, 786468},
	{786732, 786467},
	{786739, 786732},
	{786738, 786739},
	{786737, 786738},
	{786736, 786737},
	{786735, 786736},
	{786734, 786735},
	{786733, 786734},
	{786731, 786730},
	{786731, 786508},
	{786741, 786731},
	{786746, 786741},
	{786745, 786746},
	{786744, 786745},
	{786743, 786744},
	{786742, 786743},
	{786740, 786742},
	{786809, 786740},
	{786810, 786809},
	{786811, 786810},
	{786808, 786811},
	{786907, 786808},
	{786908, 786907},
	{786906, 786908},
	{2490913, 2490906},
	{2490841, 2490982},
	{2490926, 2490932},
	{1114383, 1114390},
}

gpsRoute = false
gpsThread = false
gpsWaypoints = {}
nextWp = false
turnAround = false
currentWaypoint = false
waypointInterpolation = false
waypointEndInterpolation = false
reRouting = false

local waypointColShapes = false
local colShapes = {}

local currentSound = false
local playedSounds = {}

local checkForRerouteTimer = false
local rerouteCheckRate = 1500

local distanceDivider = 0.9

addEventHandler("onClientVehicleEnter", getRootElement(),
	function (player)
		if player == localPlayer then
			carCanGPS()

			if getElementData(source, "gpsDestination") then
				local destination = getElementData(source, "gpsDestination")

				gpsThread = coroutine.create(makeRoute)

				coroutine.resume(gpsThread, destination[1], destination[2], true)
			end
		end
	end
)

addEventHandler("onClientVehicleExit", getRootElement(),
	function (player)
		if player == localPlayer and gpsRoute then
			endRoute()
		end
	end
)

addEventHandler("onClientElementDestroy", getRootElement(),
	function ()
		if source == occupiedVehicle and getElementData(source, "gpsDestination") then
			setElementData(source, "gpsDestination", false)
			
			if gpsRoute then
				endRoute()
			end
		end
	end
)

addEventHandler("onClientResourceStart", getResourceRootElement(),
	function ()
		for _, node in ipairs(disallowedNodes) do
			local area = math.floor(node[1] / 65536)
			local copy = shallowcopy(vehicleNodes[area][node[1]].neighbours)
			
			vehicleNodes[area][node[1]].neighbours = {}
			
			for k, v in pairs(copy) do
				if k ~= node[2] then
					vehicleNodes[area][node[1]].neighbours[k] = v
				end
			end

		end

		occupiedVehicle = getPedOccupiedVehicle(localPlayer)
		
		if occupiedVehicle then
			carCanGPS()

			if getElementData(occupiedVehicle, "gpsDestination") then
				local destination = getElementData(occupiedVehicle, "gpsDestination")

				gpsThread = coroutine.create(makeRoute)

				coroutine.resume(gpsThread, destination[1], destination[2], true)
			end
		end
	end
)

local nodesRendering = false

addCommandHandler("tognodes",
	function ()
		if getElementData(localPlayer, "acc.adminLevel") >= 9 then
			if nodesRendering then
				nodesRendering = false
				removeEventHandler("onClientRender", getRootElement(), renderTheNodes)
			else
				nodesRendering = true
				addEventHandler("onClientRender", getRootElement(), renderTheNodes)
			end
		end
	end
)

function renderTheNodes()
	local playerPosX, playerPosY, playerPosZ = getElementPosition(localPlayer)
	local areaID = math.floor((playerPosX + 3000) / 750) + math.floor((playerPosY + 3000) / 750) * 8
	local drawn = {}
	
	for id, node in pairs(vehicleNodes[areaID]) do
		local distance = getDistanceBetweenPoints3D(playerPosX, playerPosY, playerPosZ, node.x, node.y, playerPosZ)

		if distance <= 50 then
			local screenX, screenY = getScreenFromWorldPosition(node.x, node.y, node.z + 1)
			
			if screenX and screenY then
				dxDrawText(tostring(id), screenX - 10, screenY - 5, 0, 0, -1, 0.75, Roboto18)
			end
			
			for neighbour in pairs(node.neighbours) do
				if not drawn[id .. "-" .. neighbour] then
					local nodeNeighbour = vehicleNodes[math.floor(neighbour / 65536)][neighbour]

					dxDrawLine3D(node.x, node.y, node.z + 1, nodeNeighbour.x, nodeNeighbour.y, nodeNeighbour.z + 1, tocolor(50, 50, 200), 3)

					drawn[id .. "-" .. neighbour] = true
				end
			end
		end
	end
end

function getPositionFromElementOffset(element, x, y, z)
	local matrix = getElementMatrix(element)
	local posX = x * matrix[1][1] + y * matrix[2][1] + z * matrix[3][1] + matrix[4][1]
	local posY = x * matrix[1][2] + y * matrix[2][2] + z * matrix[3][2] + matrix[4][2]
	local posZ = x * matrix[1][3] + y * matrix[2][3] + z * matrix[3][3] + matrix[4][3]
	return posX, posY, posZ
end

local function getAngle(x1, y1, x2, y2)
	local angle = math.atan2(x2, y2) - math.atan2(x1, y1)
	
	if angle <= -math.pi then
		angle = angle + math.pi * 2
	elseif angle > math.pi then
		angle = angle - math.pi * 2
	end
	
	return angle
end

function shallowcopy(t)
	if type(t) ~= "table" then
		return t
	end
	
	local target = {}
	for k,v in pairs(t) do
		target[k] = v
	end

	return target
end

local function calculatePath(startNode, endNode)
	local usedNodes = {[startNode.id] = true}
	local currentNodes = {}
	local ways = {}
	
	for id, distance in pairs(startNode.neighbours) do
		usedNodes[id] = true
		currentNodes[id] = distance
		ways[id] = {startNode.id}
	end
	
	while true do
		local currentNode = -1
		local maxDistance = 10000
		
		for id, distance in pairs(currentNodes) do
			if distance < maxDistance then
				currentNode = id
				maxDistance = distance
			end
		end
		
		if currentNode == -1 then
			return false
		end
		
		if endNode.id == currentNode then
			local lastNode = currentNode
			local foundedNodes = {}
			
			while tonumber(lastNode) do
				local node = getVehicleNodeByID(lastNode)

				table.insert(foundedNodes, 1, node)

				lastNode = ways[lastNode]
			end
			
			return foundedNodes
		end
		
		for id, distance in pairs(getVehicleNodeByID(currentNode).neighbours) do
			if not usedNodes[id] then
				ways[id] = currentNode
				currentNodes[id] = maxDistance + distance
				usedNodes[id] = true
			end
		end
		
		currentNodes[currentNode] = nil
	end
end

function getVehicleNodeByID(nodeID)
	local areaID = math.floor(nodeID / 65536)

	if areaID >= 0 and areaID <= 63 then
		return vehicleNodes[areaID][nodeID]
	end
end

function getVehicleNodeClosestToPoint(x, y)
	local foundedNode = -1
	local lastNodeDistance = 10000
	local areaID = math.floor((x + 3000) / 750) + math.floor((y + 3000) / 750) * 8
	
	if not vehicleNodes[areaID] then
		return false
	end
	
	for _, node in pairs(vehicleNodes[areaID]) do
		local nodeDistance = getDistanceBetweenPoints2D(x, y, node.x, node.y)
		
		if lastNodeDistance > nodeDistance then
			lastNodeDistance = nodeDistance
			foundedNode = node
		end
	end
	
	return foundedNode
end

function playGPSSound(sounds)
	if isElement(currentSound) then
		destroyElement(currentSound)
	end
	
	if isTimer(currentSoundTimer) then
		killTimer(currentSoundTimer)
	end

	if carCanGPSVal ~= "off" then
		currentSound = playSound("widgets/radar/files/gps/sounds/" .. carCanGPSVal .. "/ding.ogg")
		currentSoundTimer = setTimer(playNextGPSSound, getSoundLength(currentSound) * 1000, 1, split(sounds, ";"), 1)
	end
end

function playNextGPSSound(sounds, count)
	if carCanGPSVal ~= "off" then
		currentSound = playSound("widgets/radar/files/gps/sounds/" .. carCanGPSVal .. "/" .. sounds[count] .. ".ogg")
		
		if count < #sounds then
			currentSoundTimer = setTimer(playNextGPSSound, getSoundLength(currentSound) * 1000, 1, sounds, count + 1)
		end
	end
end

function playOneGPSSound(sound)
	if isElement(currentSound) then
		destroyElement(currentSound)
	end
	
	if isTimer(currentSoundTimer) then
		killTimer(currentSoundTimer)
	end

	if carCanGPSVal ~= "off" then
		currentSound = playSound("widgets/radar/files/gps/sounds/" .. carCanGPSVal .. "/" .. sound .. ".ogg")
	end
end

function calculateRoute(x1, y1, x2, y2)
	local startNode = getVehicleNodeClosestToPoint(x1, y1)
	local endNode = getVehicleNodeClosestToPoint(x2, y2)
	
	if not startNode then
		playOneGPSSound("gpslost")
		return false
	end
	
	if not endNode then
		showInfobox("error", "Nem található útvonal a kiválasztott célhoz.")
		return false
	end
	
	return calculatePath(startNode, endNode)
end

function endRoute()
	if gpsRoute then
		if waypointColShapes then
			for k, v in pairs(waypointColShapes) do
				colShapes[waypointColShapes[k]] = nil
				
				if isElement(v) then
					destroyElement(v)
				end
					
				waypointColShapes[k] = nil
			end
		end
		
		nextWp = false
		
		if isTimer(checkForRerouteTimer) then
			killTimer(checkForRerouteTimer)
		end
		
		checkForRerouteTimer = false
		clearGPSRoute()
		waypointEndInterpolation = getTickCount()
		gpsRoute = false
		gpsThread = false
	end
end

function reRoute(checkShape)
	if not gpsRoute or not occupiedVehicle then
		return
	end
	
	local vehiclePosX, vehiclePosY = getElementPosition(occupiedVehicle)
	
	if getDistanceBetweenPoints2D(gpsRoute[checkShape].x, gpsRoute[checkShape].y, vehiclePosX, vehiclePosY) >= 50 then
		if not makeRoute(lastDestinationX, lastDestinationY, true) then
			checkForRerouteTimer = setTimer(checkForReroute, 10000, 1)
			reRouting = true
		end
	else
		checkForRerouteTimer = setTimer(checkForReroute, rerouteCheckRate, 1)
		reRouting = false
	end
end

function checkForReroute()
	if not gpsRoute or not occupiedVehicle then
		return
	end
	
	local vehiclePosX, vehiclePosY = getElementPosition(occupiedVehicle)
	local dist = getDistanceBetweenPoints2D(gpsRoute[currentNode].x, gpsRoute[currentNode].y, vehiclePosX, vehiclePosY)

	if dist >= 30 and dist < 80 and gpsRoute[currentNode + 1] and lastTurnAroundCheck and getTickCount() - lastTurnAroundCheck > 5000 then
		local x, y = getPositionFromElementOffset(occupiedVehicle, -1, 0, 0)
		local angle = math.deg(getAngle(gpsRoute[currentNode + 1].x - gpsRoute[currentNode].x, gpsRoute[currentNode + 1].y - gpsRoute[currentNode].y, x - vehiclePosX, y - vehiclePosY))
		
		if angle > 0 then
			lastTurnAroundCheck = getTickCount()
			checkForRerouteTimer = setTimer(checkForReroute, rerouteCheckRate, 1)

			playGPSSound("forduljvissza")

			turnAround = true
			reRouting = false

			return
		else
			turnAround = false
			reRouting = false
		end
	end
	
	if isTimer(checkForRerouteTimer) then
		killTimer(checkForRerouteTimer)
	end
	
	if dist > 100 then
		checkForRerouteTimer = setTimer(reRoute, math.random(3000, 5000), 1, currentNode)
		reRouting = getTickCount()
		playGPSSound("ujratervezes")
	else
		checkForRerouteTimer = setTimer(checkForReroute, rerouteCheckRate, 1)
	end
end

function makeRoute(destinationX, destinationY, uTurned)
	waypointInterpolation = false
	
	if isElement(currentSound) then
		destroyElement(currentSound)
	end
	
	if isTimer(currentSoundTimer) then
		killTimer(currentSoundTimer)
	end
	
	if isTimer(checkForRerouteTimer) then
		killTimer(checkForRerouteTimer)
	end
	
	clearGPSRoute()
	gpsWaypoints = {}
	turnAround = false
	gpsLines = {}
	gpsRoute = false
	
	if waypointColShapes then
		for k, v in pairs(waypointColShapes) do
			colShapes[waypointColShapes[k]] = nil
			
			if isElement(v) then
				destroyElement(v)
			end
				
			waypointColShapes[k] = nil
		end
	end
	
	waypointColShapes = {}
	colShapes = {}
	
	if not occupiedVehicle then
		return
	end
	
	local vehiclePosX, vehiclePosY = getElementPosition(occupiedVehicle)
	
	local currentZoneName = getZoneName(vehiclePosX, vehiclePosY, 0)
	local currentCityName = getZoneName(vehiclePosX, vehiclePosY, 0, true)
	local zoneName = getZoneName(destinationX, destinationY, 0)
	local cityName = getZoneName(destinationX, destinationY, 0, true)
	local disallowedZones = {
		Unknown = true,
		
		["Los Santos"] = false,
		["Red County"] = false,
		
		["San Fierro"] = false,
		["San Fierro Bay"] = true,
		["Gant Bridge"] = true,
		["Flint County"] = false,
		Whetstone = false,
		
		["Las Venturas"] = true,
		["Bone County"] = true,
		["Tierra Robada"] = true
	}
	
	if disallowedZones[currentZoneName] or disallowedZones[currentCityName] then
		playOneGPSSound("gpslost")
		setElementData(occupiedVehicle, "gpsDestination", false)
		return false
	end
	
	if disallowedZones[zoneName] or disallowedZones[cityName] then
		showInfobox("error", "Nem található útvonal a kiválasztott célhoz.")
		setElementData(occupiedVehicle, "gpsDestination", false)
		return false
	end
	
	local routePath = calculateRoute(vehiclePosX, vehiclePosY, destinationX, destinationY)
	
	if not routePath then
		if not uTurned then
			showInfobox("error", "Nem található útvonal a kiválasztott célhoz.")
		else
			playOneGPSSound("gpslost")
		end
		
		setElementData(occupiedVehicle, "gpsDestination", false)

		return false
	end
	
	gpsRoute = routePath
	nextWp = 1
	currentWaypoint = 0
	currentNode = 1
	checkForRerouteTimer = setTimer(checkForReroute, rerouteCheckRate, 1)

	local turns = {}

	for i, node in ipairs(gpsRoute) do
		local nextNode = gpsRoute[i + 1]
		local previousNode = gpsRoute[i - 1]
		
		if i > 1 and i < #gpsRoute then
			for k in pairs(node.neighbours) do
				if previousNode and nextNode and k ~= previousNode.id and k ~= nextNode.id then
					local angle = math.deg(getAngle(node.x - previousNode.x, node.y - previousNode.y, nextNode.x - node.x, nextNode.y - node.y))
					
					if angle > 10 then
						table.insert(turns, {i, "right"})
						break
					end
					
					if angle < -10 then
						table.insert(turns, {i, "left"})
					end
					
					break
				end
			end
		end
		
		waypointColShapes[i] = createColTube(node.x, node.y, node.z - 0.3, 8, 5)
		colShapes[waypointColShapes[i]] = i
		addGPSLine(node.x, node.y)
	end
	
	local currentWaypoint = 1

	for i = 1, #turns do
		local currentWaypointData = gpsRoute[currentWaypoint]
		local nodeId = tonumber(turns[i][1])

		if not nodeId then
			nodeId = #gpsRoute
		end

		local waypointDistance = 0

		for j = currentWaypoint, nodeId do
			waypointDistance = waypointDistance + getDistanceBetweenPoints2D(gpsRoute[j].x, gpsRoute[j].y, currentWaypointData.x, currentWaypointData.y)
			currentWaypointData = gpsRoute[j]
		end
		
		currentWaypointData = gpsRoute[currentWaypoint]
		
		if waypointDistance > 600 then
			local nodeDistance = 0
			
			for j = currentWaypoint, nodeId do
				nodeDistance = nodeDistance + getDistanceBetweenPoints2D(gpsRoute[j].x, gpsRoute[j].y, currentWaypointData.x, currentWaypointData.y)
				
				if waypointDistance - 500 < nodeDistance then
					table.insert(gpsWaypoints, {j, "forward"})
					break
				end
			end
		end
	
		currentWaypoint = nodeId
		table.insert(gpsWaypoints, turns[i])
	end
	
	table.insert(gpsWaypoints, {"end", "end"})
	
	local firstWaypointDistance, prevWaypointData = 0, gpsRoute[1]

	for i = 1, tonumber(gpsWaypoints[nextWp][1]) or #gpsRoute do
		firstWaypointDistance = firstWaypointDistance + getDistanceBetweenPoints2D(gpsRoute[i].x, gpsRoute[i].y, prevWaypointData.x, prevWaypointData.y)
		prevWaypointData = gpsRoute[i]
	end

	gpsWaypoints[nextWp][3] = firstWaypointDistance / distanceDivider
	
	local x, y = getPositionFromElementOffset(occupiedVehicle, -1, 0, 0)
	local angle = math.deg(getAngle(gpsRoute[2].x - gpsRoute[1].x, gpsRoute[2].y - gpsRoute[1].y, x - vehiclePosX, y - vehiclePosY))
	
	if angle > 0 then
		lastTurnAroundCheck = getTickCount()
		
		if not uTurned then
			currentSound = setTimer(playGPSSound, 1750, 1, "forduljvissza")
		else
			playGPSSound("forduljvissza")
		end
		
		turnAround = true
	end

	lastDestinationX = destinationX
	lastDestinationY = destinationY

	processGPSLines()
	
	if isElement(selectedRouteSound) then
		destroyElement(selectedRouteSound)
	end
	
	selectedRouteSound = false
	
	if not uTurned then
		if carCanGPSVal ~= "off" then
			--selectedRouteSound = playSound("widgets/radar/files/gps/sounds/" .. carCanGPSVal .. "/uticel.ogg")
		end
	end
end

addEventHandler("onClientColShapeHit", getRootElement(),
	function (element)
		if colShapes[source] and element == localPlayer then
			local currentShape = colShapes[source]
			
			clearGPSRoute()
			
			if currentShape >= 2 then
				if isTimer(checkForRerouteTimer) then
					killTimer(checkForRerouteTimer)
				end
				
				checkForRerouteTimer = false
				turnAround = false
			end
			
			if currentShape == #gpsRoute then
				--playGPSSound("erkezes;a_celhoz")
				
				for i = 1, currentShape do
					if isElement(waypointColShapes[i]) then
						destroyElement(waypointColShapes[i])
					end
					
					waypointColShapes[i] = nil
				end
				
				nextWp = false
				
				if isTimer(checkForRerouteTimer) then
					killTimer(checkForRerouteTimer)
				end
				
				checkForRerouteTimer = false
				setElementData(occupiedVehicle, "gpsDestination", false)

				return
			else
				for i = 1, currentShape do
					if isElement(waypointColShapes[i]) then
						destroyElement(waypointColShapes[i])
					end
					
					waypointColShapes[i] = nil
				end
				
				for i = currentShape, #gpsRoute do
					addGPSLine(gpsRoute[i].x, gpsRoute[i].y)
				end
				
				if isTimer(checkForRerouteTimer) then
					killTimer(checkForRerouteTimer)
				end
				
				currentNode = currentShape + 1
				lastTurnAroundCheck = getTickCount()
				checkForRerouteTimer = setTimer(checkForReroute, rerouteCheckRate, 1)
				reRouting = false
				processGPSLines()
			end

			if gpsWaypoints[nextWp] and gpsWaypoints[nextWp][1] ~= "end" then
				if currentShape >= gpsWaypoints[nextWp][1] then -- Ha elért a waypointhoz, következő waypoint distance lekérése
					nextWp = nextWp + 1
					playedSounds = {}
					
					local nextWaypointDistance, prevWaypointData = 0, gpsRoute[currentShape]

					for i = currentShape, tonumber(gpsWaypoints[nextWp][1]) or #gpsRoute do
						nextWaypointDistance = nextWaypointDistance + getDistanceBetweenPoints2D(gpsRoute[i].x, gpsRoute[i].y, prevWaypointData.x, prevWaypointData.y)
						prevWaypointData = gpsRoute[i]
					end

					gpsWaypoints[nextWp][3] = nextWaypointDistance / distanceDivider
				else -- Ha még nem ért el a következő waypointhoz akkor csekkolja a távolságot, frissítsen és adjon utasítást ha szükséges
					local nextWaypointDistance, prevWaypointData = 0, gpsRoute[currentShape]

					for i = currentShape, gpsWaypoints[nextWp][1] do
						nextWaypointDistance = nextWaypointDistance + getDistanceBetweenPoints2D(gpsRoute[i].x, gpsRoute[i].y, prevWaypointData.x, prevWaypointData.y)
						prevWaypointData = gpsRoute[i]
					end

					gpsWaypoints[nextWp][3] = nextWaypointDistance / distanceDivider

					if gpsWaypoints[nextWp][2] == "forward" and not playedSounds["forward"] and currentShape > 2 then
						if gpsWaypoints[nextWp - 1] and currentShape < 2 + gpsWaypoints[nextWp - 1][1] then
							return
						end
						
						playedSounds["forward"] = true
						playGPSSound("egyenes")

						return
					end
					
					local nextWaypointDistance = math.floor(gpsWaypoints[nextWp][3] / 10) * 10
					
					if nextWaypointDistance <= 50 and not playedSounds[50] then
						playedSounds[50] = true
						playedSounds[300] = true
						playedSounds[600] = true
						playedSounds[1000] = true
						playedSounds[1500] = true
						playedSounds[2000] = true
						
						if gpsWaypoints[nextWp][2] == "left" then
							playGPSSound("fordulj;balra")
						elseif gpsWaypoints[nextWp][2] == "right" then
							playGPSSound("fordulj;jobbra")
						end
						
						return
					end

					if nextWaypointDistance > 280 and nextWaypointDistance <= 300 and not playedSounds[300] then
						playedSounds[300] = true
						playedSounds[600] = true
						playedSounds[1000] = true
						playedSounds[1500] = true
						playedSounds[2000] = true
						
						if gpsWaypoints[nextWp][2] == "left" then
							playGPSSound("menj;300;metert;majd;fordulj;balra")
						elseif gpsWaypoints[nextWp][2] == "right" then
							playGPSSound("menj;300;metert;majd;fordulj;jobbra")
						end
						
						return
					end
					
					if nextWaypointDistance > 580 and nextWaypointDistance <= 600 and not playedSounds[600] then
						playedSounds[600] = true
						playedSounds[1000] = true
						playedSounds[1500] = true
						playedSounds[2000] = true
						
						if gpsWaypoints[nextWp][2] == "left" then
							playGPSSound("menj;600;metert;majd;fordulj;balra")
						elseif gpsWaypoints[nextWp][2] == "right" then
							playGPSSound("menj;600;metert;majd;fordulj;jobbra")
						end
						
						return
					end
					
					if nextWaypointDistance > 980 and nextWaypointDistance <= 1000 and not playedSounds[1000] then
						playedSounds[1000] = true
						playedSounds[1500] = true
						playedSounds[2000] = true

						if gpsWaypoints[nextWp][2] == "left" or gpsWaypoints[nextWp][2] == "right" then
							playGPSSound("menj;1;kilometert")
						end
						
						return
					end
					
					if nextWaypointDistance > 1480 and nextWaypointDistance <= 1500 and not playedSounds[1500] then
						playedSounds[1500] = true
						playedSounds[2000] = true
						
						if gpsWaypoints[nextWp][2] == "left" or gpsWaypoints[nextWp][2] == "right" then
							playGPSSound("menj;tobb_mint;1;kilometert")
						end
						
						return
					end

					if nextWaypointDistance > 1980 and nextWaypointDistance <= 2000 and not playedSounds[2000] then
						playedSounds[2000] = true
						
						if gpsWaypoints[nextWp][2] == "left" or gpsWaypoints[nextWp][2] == "right" then
							playGPSSound("menj;2;kilometert")
						end
						
						return
					end
				end
			else
				local nextWaypointDistance, prevWaypointData = 0, gpsRoute[currentShape]

				for i = currentShape, #gpsRoute do
					nextWaypointDistance = nextWaypointDistance + getDistanceBetweenPoints2D(gpsRoute[i].x, gpsRoute[i].y, prevWaypointData.x, prevWaypointData.y)
					prevWaypointData = gpsRoute[i]
				end
				
				gpsWaypoints[nextWp][3] = nextWaypointDistance / distanceDivider
			end

			if gpsWaypoints[nextWp] and gpsWaypoints[nextWp][1] == "end" and not playedSounds["finish"] and currentShape > 2 and currentShape > #gpsRoute - 3 then
				playedSounds["finish"] = true
				playGPSSound("erkezes;a_celhoz")
			end
		end
	end
)